# Table of Contents
- types/governance.ts
- types/mcp.ts
- app/layout.tsx
- app/page.tsx
- lib/mcp-client.ts
- lib/utils.ts
- lib/governance-loader.ts
- app/chat/page.tsx
- app/agents/page.tsx
- app/about/page.tsx
- app/how-it-works/page.tsx
- app/mission/page.tsx
- app/forum/page.tsx
- app/api/mcp/route.ts
- app/api/governance/route.ts
- app/api/mcp/proposals/route.ts
- app/api/mcp/proposals/[id]/route.ts
- components/ui/tabs.tsx
- components/ui/card.tsx
- components/ui/scroll-area.tsx
- components/ui/avatar.tsx
- components/ui/dialog.tsx
- components/ui/badge.tsx
- components/ui/separator.tsx
- components/ui/button.tsx
- components/ui/dropdown-menu.tsx
- components/layout/Header.tsx
- components/governance/OrganizationSelector.tsx
- components/governance/PrinciplesList.tsx
- components/governance/ContentDisplay.tsx
- components/governance/DiscussionViewer.tsx

## File: types/governance.ts

- Extension: .ts
- Language: typescript
- Size: 1605 bytes
- Created: 2025-06-09 17:55:18
- Modified: 2025-06-09 17:55:18

### Code

```typescript
export interface GovernancePrinciple {
  version: string;
  principle_id: string;
  name: string;
  description: string;
  category: string;
  domain?: string;
  previous_version?: string;
  requirements?: Record<string, any>;
  validation_rules?: Record<string, any>;
  examples?: Record<string, any>;
  cross_domain_applications?: Record<string, string>;
  changelog?: Record<string, any>;
  freedoms?: Record<string, any>;
  harm_categories?: Record<string, any>;
  assessment_framework?: Record<string, any>;
  [key: string]: any;
}

export interface InheritanceConfig {
  version: string;
  name: string;
  description: string;
  repository: string;
  extends: string | null;
  provides?: string[];
  inheritance?: Record<string, any>;
  domain_extensions?: Record<string, any>;
  specialization?: Record<string, any>;
  governance?: Record<string, any>;
}

export interface GovernanceDiscussion {
  title: string;
  status: string;
  proposal?: string;
  created: string;
  author: string;
  summary: string;
  content: string;
  filename: string;
  path: string;
}

export interface GovernanceOrganization {
  id: string;
  name: string;
  version: string;
  description: string;
  inheritance: InheritanceConfig;
  principles: GovernancePrinciple[];
  discussions: GovernanceDiscussion[];
  emoji: string;
}

export interface GovernanceData {
  organizations: GovernanceOrganization[];
  principlesByOrg: Record<string, GovernancePrinciple[]>;
  discussionsByPrinciple: Record<string, GovernanceDiscussion[]>;
}

export type OrganizationType = 'core-governance' | 'animal-welfare' | 'environment';
```

## File: types/mcp.ts

- Extension: .ts
- Language: typescript
- Size: 3373 bytes
- Created: 2025-06-09 16:09:40
- Modified: 2025-06-09 16:09:40

### Code

```typescript
// MCP Types for DAHAO Governance Platform
// These types mirror the MCP server's TypeScript interfaces

export interface EthicsFramework {
  version: string;
  domain: string;
  principles: EthicsPrinciple[];
  lastUpdated: string;
  compatibility: string[];
}

export interface EthicsPrinciple {
  id: string;
  title: string;
  description: string;
  requirements: string[];
  examples: string[];
}

export interface GovernanceProposal {
  id: string;
  title: string;
  description: string;
  type: 'ethics_evolution' | 'policy_change' | 'resource_allocation' | 'structural_change';
  domain: string;
  status: 'draft' | 'discussion' | 'voting' | 'approved' | 'rejected' | 'implemented';
  createdAt: string;
  author: string;
  githubIssueNumber?: number;
  ethicsCompatibility?: EthicsCompatibilityResult;
  crossDomainImpact?: CrossDomainAnalysis;
}

export interface EthicsCompatibilityResult {
  compatible: boolean;
  conflicts: string[];
  recommendations: string[];
  requiredUpdates: string[];
}

export interface CrossDomainAnalysis {
  affectedDomains: string[];
  impacts: DomainImpact[];
  synergies: string[];
  risks: string[];
}

export interface DomainImpact {
  domain: string;
  impactLevel: 'low' | 'medium' | 'high';
  description: string;
  mitigations: string[];
}

export interface RepoStatus {
  currentBranch: string;
  activeProposals: number;
  ethicsVersions: Record<string, string>;
  lastActivity: string;
  collaborationMetrics: {
    contributors: number;
    proposalsThisMonth: number;
    implementationRate: number;
  };
}

// GitHub Discussion interfaces
export interface GitHubComment {
  author: string;
  body: string;
  createdAt: string;
  reactions: any;
}

export interface GitHubProposal {
  number: number;
  title: string;
  body: string;
  labels: string[];
  createdAt: string;
  author: string;
  comments: number;
}

// MCP Tool Request/Response types
export interface CreateProposalRequest {
  title: string;
  description: string;
  type: GovernanceProposal['type'];
  domain: string;
  author: string;
}

export interface ValidateEthicsRequest {
  proposal: Partial<GovernanceProposal>;
}

export interface AnalyzeCrossDomainRequest {
  proposal: Partial<GovernanceProposal>;
}

export interface UpdateProposalStatusRequest {
  status: string;
}

// Frontend-specific types
export interface ProposalFormData {
  title: string;
  description: string;
  type: GovernanceProposal['type'];
  domain: string;
}

export interface ChatMessage {
  id: string;
  content: string;
  role: 'user' | 'assistant';
  timestamp: Date;
  metadata?: {
    proposal?: GovernanceProposal;
    ethicsAnalysis?: EthicsCompatibilityResult;
    crossDomainAnalysis?: CrossDomainAnalysis;
  };
}

// Domain configuration
export const GOVERNANCE_DOMAINS = [
  'animal-welfare',
  'music-industry',
  'environment',
  'human-rights',
  'technology-ethics',
  'economic-policy'
] as const;

export const PROPOSAL_TYPES = [
  'ethics_evolution',
  'policy_change',
  'resource_allocation',
  'structural_change'
] as const;

export const PROPOSAL_STATUSES = [
  'draft',
  'discussion',
  'voting',
  'approved',
  'rejected',
  'implemented'
] as const;

export type GovernanceDomain = typeof GOVERNANCE_DOMAINS[number];
export type ProposalType = typeof PROPOSAL_TYPES[number];
export type ProposalStatus = typeof PROPOSAL_STATUSES[number];
```

## File: app/layout.tsx

- Extension: .tsx
- Language: typescript
- Size: 673 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import { Header } from '@/components/layout/Header'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'DaHao DAO - Decentralized Autonomous Organization',
  description: 'A decentralized platform for community governance and collaboration',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Header />
        <main className="min-h-screen">
          {children}
        </main>
      </body>
    </html>
  )
}
```

## File: app/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 9233 bytes
- Created: 2025-06-09 15:36:27
- Modified: 2025-06-09 15:36:27

### Code

```typescript
'use client';

import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { ArrowRightIcon, FileTextIcon, MessageSquareIcon, VoteIcon, GitBranchIcon, Users2Icon, BrainIcon, Network, Zap, CoinsIcon, TrendingUpIcon, LightbulbIcon } from 'lucide-react';

export default function Home() {
  const features = [
    {
      icon: FileTextIcon,
      title: 'Our Mission',
      description: 'Learn about our vision for human-AI collaboration and ethical governance',
      href: '/mission',
    },
    {
      icon: VoteIcon,
      title: 'AI Agent System',
      description: 'Deploy your personal AI agent and participate in collective decision-making',
      href: '/agents',
    },
    {
      icon: MessageSquareIcon,
      title: 'How It Works',
      description: 'Deep dive into GitHub Actions, Claude Code integration, and agent workflows',
      href: '/how-it-works',
    },
  ];

  return (
    <div className="container mx-auto px-4 py-16">
      <div className="max-w-4xl mx-auto">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold tracking-tight mb-4">
            Welcome to DAHAO
          </h1>
          <p className="text-lg text-muted-foreground mb-2">
            <span className="font-semibold">Decentralized Autonomous Hybrid-AI Organization</span>
          </p>
          <p className="text-xl text-muted-foreground mb-8">
            Where humans and AI agents collaborate to evolve ethical systems through versioned governance
          </p>
          
          <div className="space-y-4">
            <p className="text-lg text-muted-foreground">
              Explore the future of human-AI collaboration
            </p>
            <Button asChild size="lg">
              <Link href="/mission">
                Learn More
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
          </div>
        </div>

        <div className="grid gap-6 md:grid-cols-3">
          {features.map((feature) => {
            const Icon = feature.icon;
            return (
              <Card key={feature.href} className="hover:shadow-lg transition-shadow">
                <CardHeader>
                  <Icon className="h-8 w-8 mb-2 text-primary" />
                  <CardTitle>{feature.title}</CardTitle>
                  <CardDescription>{feature.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <Button asChild variant="outline" className="w-full">
                    <Link href={feature.href}>
                      Explore
                      <ArrowRightIcon className="ml-2 h-4 w-4" />
                    </Link>
                  </Button>
                </CardContent>
              </Card>
            );
          })}
        </div>

        <div className="mt-16 text-center">
          <h2 className="text-2xl font-semibold mb-4">The DAHAO Vision</h2>
          <div className="prose prose-gray mx-auto max-w-3xl">
            <p className="text-muted-foreground">
              DAHAO represents a revolutionary approach to organizational governance where humans and AI agents 
              work together to develop and evolve ethical systems. Like Git for code, we version ethical 
              principles, allowing communities to fork, modify, and merge moral frameworks.
            </p>
            <p className="text-muted-foreground mt-4">
              Each member deploys a personal AI agent that embodies their values while respecting core 
              community principles. These agents collaborate on GitHub Issues and Pull Requests, 
              analyzing proposals through ethical lenses and helping humans make more thoughtful collective decisions.
            </p>
            <p className="text-muted-foreground mt-4">
              Starting as a forum-like platform, DAHAO evolves into fully autonomous organizations 
              where versioned ethics, transparent reasoning, and human-AI collaboration create 
              unprecedented organizational intelligence.
            </p>
            
            <div className="mt-8 p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200">
              <h3 className="text-lg font-semibold mb-3 text-blue-800">Strategic Leverage</h3>
              <p className="text-muted-foreground">
                DAHAO doesn't reinvent the wheel - we add steering. By building on GitHub, Claude, Copilot 
                and other proven platforms, we focus on what's missing: ethical governance and fair value distribution.
              </p>
            </div>
            
            <div className="mt-6 p-6 bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg border border-green-200">
              <h3 className="text-lg font-semibold mb-3 text-green-800">Self-Reinforcing Growth</h3>
              <p className="text-muted-foreground">
                DAHAO grows stronger with each participant. Start free, contribute value, upgrade naturally. 
                Every contribution strengthens the network, creating exponential rather than linear growth.
              </p>
            </div>
          </div>
        </div>

        <div className="mt-16">
          <h2 className="text-2xl font-semibold mb-8 text-center">Core Concepts</h2>
          <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
            <div className="text-center">
              <GitBranchIcon className="h-12 w-12 mx-auto mb-4 text-blue-500" />
              <h3 className="text-lg font-semibold mb-2">Versioned Ethics</h3>
              <p className="text-sm text-muted-foreground">
                Ethical principles evolve like code - tracked, versioned, and democratically updated through Git workflows
              </p>
            </div>
            <div className="text-center">
              <BrainIcon className="h-12 w-12 mx-auto mb-4 text-green-500" />
              <h3 className="text-lg font-semibold mb-2">AI Agent Partners</h3>
              <p className="text-sm text-muted-foreground">
                Personal AI agents embody your values, analyze proposals, and provide ethical reasoning for every decision
              </p>
            </div>
            <div className="text-center">
              <Users2Icon className="h-12 w-12 mx-auto mb-4 text-purple-500" />
              <h3 className="text-lg font-semibold mb-2">Hybrid Governance</h3>
              <p className="text-sm text-muted-foreground">
                Humans set the direction, AI agents provide analysis, and collective wisdom emerges from their collaboration
              </p>
            </div>
            <div className="text-center">
              <TrendingUpIcon className="h-12 w-12 mx-auto mb-4 text-emerald-500" />
              <h3 className="text-lg font-semibold mb-2">Economic Democracy</h3>
              <p className="text-sm text-muted-foreground">
                Every profitable transaction funds social impact. Success measured in both returns AND lives changed. 
                Investors profit BY solving problems, not despite them.
              </p>
            </div>
            <div className="text-center">
              <LightbulbIcon className="h-12 w-12 mx-auto mb-4 text-yellow-500" />
              <h3 className="text-lg font-semibold mb-2">Intellectual Mining</h3>
              <p className="text-sm text-muted-foreground">
                Thought becomes value. Deploy your AI agent, contribute improvements, earn rewards for accepted innovations. 
                Your daily API costs become profitable intellectual contribution.
              </p>
            </div>
            <div className="text-center">
              <GitBranchIcon className="h-12 w-12 mx-auto mb-4 text-purple-500" />
              <h3 className="text-lg font-semibold mb-2">Fork-Friendly Evolution</h3>
              <p className="text-sm text-muted-foreground">
                Disagree with direction? Fork the organization. Keep what works, change what doesn't. 
                Best innovations flow back to benefit the entire network.
              </p>
            </div>
          </div>
        </div>

        <div className="mt-16 text-center">
          <h2 className="text-2xl font-semibold mb-4">Ready to Join the Future?</h2>
          <p className="text-muted-foreground mb-6 max-w-2xl mx-auto">
            Be part of the first platform where human wisdom and AI analysis combine to create 
            more ethical, transparent, and intelligent organizations.
          </p>
          <div className="space-x-4">
            <Button asChild size="lg">
              <Link href="/mission">
                Get Started
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
            <Button asChild variant="outline" size="lg">
              <Link href="/about">
                Learn More
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
```

## File: lib/mcp-client.ts

- Extension: .ts
- Language: typescript
- Size: 3199 bytes
- Created: 2025-06-09 16:08:09
- Modified: 2025-06-09 16:08:09

### Code

```typescript
import { 
  GovernanceProposal, 
  EthicsCompatibilityResult, 
  CrossDomainAnalysis,
  RepoStatus 
} from '@/types/mcp';

export interface MCPResponse<T = any> {
  success: boolean;
  data?: T;
  error?: string;
}

export class MCPClient {
  private baseUrl: string;

  constructor(baseUrl: string = '/api/mcp') {
    this.baseUrl = baseUrl;
  }

  async createProposal(
    title: string,
    description: string,
    type: 'ethics_evolution' | 'policy_change' | 'resource_allocation' | 'structural_change',
    domain: string,
    author: string
  ): Promise<MCPResponse<GovernanceProposal>> {
    return this.post('/create-proposal', {
      title,
      description,
      type,
      domain,
      author
    });
  }

  async getActiveProposals(): Promise<MCPResponse<GovernanceProposal[]>> {
    return this.get('/active-proposals');
  }

  async getProposal(id: string): Promise<MCPResponse<GovernanceProposal>> {
    return this.get(`/proposals/${id}`);
  }

  async validateEthicsCompatibility(
    proposal: Partial<GovernanceProposal>
  ): Promise<MCPResponse<EthicsCompatibilityResult>> {
    return this.post('/validate-ethics', { proposal });
  }

  async analyzeCrossDomainImpact(
    proposal: Partial<GovernanceProposal>
  ): Promise<MCPResponse<CrossDomainAnalysis>> {
    return this.post('/analyze-cross-domain', { proposal });
  }

  async getRepoStatus(): Promise<MCPResponse<RepoStatus>> {
    return this.get('/repo-status');
  }

  async getCurrentEthics(): Promise<MCPResponse<Record<string, any>>> {
    return this.get('/current-ethics');
  }

  async getProposalDiscussion(issueNumber: number): Promise<MCPResponse<any[]>> {
    return this.get(`/proposals/${issueNumber}/discussion`);
  }

  async updateProposalStatus(
    issueNumber: number, 
    status: string
  ): Promise<MCPResponse<void>> {
    return this.post(`/proposals/${issueNumber}/status`, { status });
  }

  private async get<T>(endpoint: string): Promise<MCPResponse<T>> {
    try {
      const response = await fetch(`${this.baseUrl}${endpoint}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      return { success: true, data };
    } catch (error) {
      return {
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      };
    }
  }

  private async post<T>(endpoint: string, body: any): Promise<MCPResponse<T>> {
    try {
      const response = await fetch(`${this.baseUrl}${endpoint}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(body),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      return { success: true, data };
    } catch (error) {
      return {
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      };
    }
  }
}

// Singleton instance
export const mcpClient = new MCPClient();
```

## File: lib/utils.ts

- Extension: .ts
- Language: typescript
- Size: 166 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

```

## File: lib/governance-loader.ts

- Extension: .ts
- Language: typescript
- Size: 7639 bytes
- Created: 2025-06-09 17:56:02
- Modified: 2025-06-09 17:56:02

### Code

```typescript
import yaml from 'js-yaml';
import matter from 'gray-matter';
import fs from 'fs/promises';
import path from 'path';
import { 
  GovernanceData, 
  GovernanceOrganization, 
  GovernancePrinciple, 
  InheritanceConfig,
  GovernanceDiscussion,
  OrganizationType 
} from '@/types/governance';

const GOVERNANCE_ROOT = path.join(process.cwd(), 'dahao-governance');

export class GovernanceLoader {
  private static instance: GovernanceLoader;
  private cached: GovernanceData | null = null;

  static getInstance(): GovernanceLoader {
    if (!GovernanceLoader.instance) {
      GovernanceLoader.instance = new GovernanceLoader();
    }
    return GovernanceLoader.instance;
  }

  async loadGovernanceData(): Promise<GovernanceData> {
    if (this.cached) {
      return this.cached;
    }

    const organizations = await this.loadOrganizations();
    
    const principlesByOrg: Record<string, GovernancePrinciple[]> = {};
    const discussionsByPrinciple: Record<string, GovernanceDiscussion[]> = {};

    for (const org of organizations) {
      principlesByOrg[org.id] = org.principles;
      
      // Group discussions by principle
      for (const discussion of org.discussions) {
        const principleKey = this.extractPrincipleFromPath(discussion.path);
        if (principleKey) {
          if (!discussionsByPrinciple[principleKey]) {
            discussionsByPrinciple[principleKey] = [];
          }
          discussionsByPrinciple[principleKey].push(discussion);
        }
      }
    }

    this.cached = {
      organizations,
      principlesByOrg,
      discussionsByPrinciple
    };

    return this.cached;
  }

  private async loadOrganizations(): Promise<GovernanceOrganization[]> {
    const orgConfigs: Array<{id: OrganizationType, name: string, emoji: string}> = [
      { id: 'core-governance', name: 'Core Governance', emoji: '🏛️' },
      { id: 'animal-welfare', name: 'Animal Welfare', emoji: '🐾' },
      { id: 'environment', name: 'Environment', emoji: '🌍' }
    ];

    const organizations: GovernanceOrganization[] = [];

    for (const config of orgConfigs) {
      try {
        const orgPath = path.join(GOVERNANCE_ROOT, config.id);
        
        // Load inheritance config
        const inheritancePath = path.join(orgPath, 'inheritance.yml');
        const inheritanceContent = await fs.readFile(inheritancePath, 'utf-8');
        const inheritance = yaml.load(inheritanceContent) as InheritanceConfig;

        // Load principles
        const principles = await this.loadPrinciples(orgPath);
        
        // Load discussions
        const discussions = await this.loadDiscussions(orgPath);

        organizations.push({
          id: config.id,
          name: config.name,
          version: inheritance.version,
          description: inheritance.description,
          inheritance,
          principles,
          discussions,
          emoji: config.emoji
        });
      } catch (error) {
        console.error(`Error loading organization ${config.id}:`, error);
      }
    }

    return organizations;
  }

  private async loadPrinciples(orgPath: string): Promise<GovernancePrinciple[]> {
    const principles: GovernancePrinciple[] = [];
    
    try {
      const ethicsPath = path.join(orgPath, 'ethics');
      const versions = await fs.readdir(ethicsPath);
      
      for (const version of versions) {
        if (version.startsWith('.')) continue;
        
        const versionPath = path.join(ethicsPath, version);
        const stat = await fs.stat(versionPath);
        
        if (stat.isDirectory()) {
          const files = await fs.readdir(versionPath);
          
          for (const file of files) {
            if (file.endsWith('.yml') || file.endsWith('.yaml')) {
              try {
                const filePath = path.join(versionPath, file);
                const content = await fs.readFile(filePath, 'utf-8');
                const principle = yaml.load(content) as GovernancePrinciple;
                principles.push(principle);
              } catch (error) {
                console.error(`Error loading principle ${file}:`, error);
              }
            }
          }
        }
      }
    } catch (error) {
      console.error(`Error loading principles from ${orgPath}:`, error);
    }

    return principles;
  }

  private async loadDiscussions(orgPath: string): Promise<GovernanceDiscussion[]> {
    const discussions: GovernanceDiscussion[] = [];
    
    try {
      const discussionsPath = path.join(orgPath, 'discussions');
      await this.loadDiscussionsRecursive(discussionsPath, discussions);
    } catch (error) {
      console.error(`Error loading discussions from ${orgPath}:`, error);
    }

    return discussions;
  }

  private async loadDiscussionsRecursive(dirPath: string, discussions: GovernanceDiscussion[]): Promise<void> {
    try {
      const items = await fs.readdir(dirPath);
      
      for (const item of items) {
        if (item.startsWith('.')) continue;
        
        const itemPath = path.join(dirPath, item);
        const stat = await fs.stat(itemPath);
        
        if (stat.isDirectory()) {
          await this.loadDiscussionsRecursive(itemPath, discussions);
        } else if (item.endsWith('.md')) {
          try {
            const content = await fs.readFile(itemPath, 'utf-8');
            const parsed = matter(content);
            
            // Extract metadata from markdown content
            const lines = content.split('\n');
            let title = '', status = '', created = '', author = '', summary = '';
            
            for (const line of lines) {
              if (line.startsWith('# ')) {
                title = line.substring(2).trim();
              } else if (line.startsWith('**Status:**')) {
                status = line.replace('**Status:**', '').trim();
              } else if (line.startsWith('**Created:**')) {
                created = line.replace('**Created:**', '').trim();
              } else if (line.startsWith('**Author:**')) {
                author = line.replace('**Author:**', '').trim();
              } else if (line.startsWith('## Summary')) {
                const summaryIndex = lines.indexOf(line);
                if (summaryIndex >= 0 && summaryIndex + 1 < lines.length) {
                  summary = lines[summaryIndex + 1]?.trim() || '';
                }
                break;
              }
            }

            discussions.push({
              title: title || item.replace('.md', ''),
              status: status || 'unknown',
              created: created || 'unknown',
              author: author || 'unknown',
              summary: summary || '',
              content: content,
              filename: item,
              path: itemPath
            });
          } catch (error) {
            console.error(`Error loading discussion ${item}:`, error);
          }
        }
      }
    } catch (error) {
      console.error(`Error reading directory ${dirPath}:`, error);
    }
  }

  private extractPrincipleFromPath(discussionPath: string): string | null {
    // Extract principle name from discussion path
    // e.g., "/path/to/discussions/transparency/file.md" -> "transparency"
    const pathParts = discussionPath.split('/');
    const discussionsIndex = pathParts.findIndex(part => part === 'discussions');
    
    if (discussionsIndex >= 0 && discussionsIndex + 1 < pathParts.length) {
      return pathParts[discussionsIndex + 1];
    }
    
    return null;
  }

  clearCache(): void {
    this.cached = null;
  }
}

export const governanceLoader = GovernanceLoader.getInstance();
```

## File: app/chat/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 14683 bytes
- Created: 2025-06-09 16:18:13
- Modified: 2025-06-09 16:18:13

### Code

```typescript
'use client';

import { useState, useEffect, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { mcpClient } from '@/lib/mcp-client';
import { 
  ChatMessage, 
  GovernanceProposal, 
  EthicsCompatibilityResult, 
  CrossDomainAnalysis,
  GOVERNANCE_DOMAINS,
  PROPOSAL_TYPES 
} from '@/types/mcp';

export default function ChatPage() {
  const [messages, setMessages] = useState<ChatMessage[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [loading, setLoading] = useState(false);
  const [draftProposal, setDraftProposal] = useState<Partial<GovernanceProposal> | null>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    // Add welcome message
    setMessages([{
      id: '1',
      content: 'Welcome to DAHAO AI Assistant! I can help you analyze proposals, check ethics compatibility, and understand cross-domain impacts. Try asking me to analyze a proposal or check the current governance status.',
      role: 'assistant',
      timestamp: new Date()
    }]);
  }, []);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const addMessage = (content: string, role: 'user' | 'assistant', metadata?: any) => {
    const newMessage: ChatMessage = {
      id: Date.now().toString(),
      content,
      role,
      timestamp: new Date(),
      metadata
    };
    setMessages(prev => [...prev, newMessage]);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!inputValue.trim()) return;

    const userMessage = inputValue.trim();
    setInputValue('');
    addMessage(userMessage, 'user');
    setLoading(true);

    try {
      await processUserMessage(userMessage);
    } catch (error) {
      addMessage('Sorry, I encountered an error processing your request.', 'assistant');
    } finally {
      setLoading(false);
    }
  };

  const processUserMessage = async (message: string) => {
    const lowerMessage = message.toLowerCase();

    // Check governance status
    if (lowerMessage.includes('status') || lowerMessage.includes('governance')) {
      const result = await mcpClient.getRepoStatus();
      if (result.success) {
        const status = result.data;
        addMessage(
          `Current governance status:\n\n` +
          `• Active proposals: ${status.activeProposals}\n` +
          `• Current branch: ${status.currentBranch}\n` +
          `• Contributors: ${status.collaborationMetrics.contributors}\n` +
          `• Proposals this month: ${status.collaborationMetrics.proposalsThisMonth}\n` +
          `• Implementation rate: ${(status.collaborationMetrics.implementationRate * 100).toFixed(1)}%\n\n` +
          `Ethics versions:\n${Object.entries(status.ethicsVersions).map(([domain, version]) => `• ${domain}: ${version}`).join('\n')}`,
          'assistant'
        );
      } else {
        addMessage('Failed to fetch governance status.', 'assistant');
      }
    }
    
    // Analyze proposal
    else if (lowerMessage.includes('analyze') || lowerMessage.includes('proposal')) {
      if (draftProposal) {
        await analyzeCurrentProposal();
      } else {
        addMessage(
          'I can analyze a proposal for ethics compatibility and cross-domain impact. Please create a draft proposal first by saying something like:\n\n' +
          '"Create a proposal to improve animal welfare standards in zoos"',
          'assistant'
        );
      }
    }
    
    // Create proposal
    else if (lowerMessage.includes('create') && (lowerMessage.includes('proposal') || lowerMessage.includes('suggest'))) {
      const proposal = extractProposalFromMessage(message);
      setDraftProposal(proposal);
      addMessage(
        `I've created a draft proposal:\n\n` +
        `**Title:** ${proposal.title}\n` +
        `**Type:** ${proposal.type}\n` +
        `**Domain:** ${proposal.domain}\n` +
        `**Description:** ${proposal.description}\n\n` +
        `Would you like me to analyze this proposal for ethics compatibility and cross-domain impacts?`,
        'assistant',
        { proposal }
      );
    }
    
    // Check ethics
    else if (lowerMessage.includes('ethics') || lowerMessage.includes('compatible')) {
      const result = await mcpClient.getCurrentEthics();
      if (result.success) {
        const ethics = result.data;
        const ethicsText = Object.entries(ethics).map(([framework, data]) => 
          `• ${framework}: ${(data as any).principles?.length || 0} principles`
        ).join('\n');
        
        addMessage(
          `Current ethics frameworks:\n\n${ethicsText}\n\n` +
          `If you have a proposal to analyze, I can check its compatibility with these frameworks.`,
          'assistant'
        );
      } else {
        addMessage('Failed to fetch current ethics frameworks.', 'assistant');
      }
    }
    
    // Generic help
    else {
      addMessage(
        'I can help you with:\n\n' +
        '• **"Check governance status"** - Get current repository and proposal status\n' +
        '• **"Show current ethics"** - Display active ethics frameworks\n' +
        '• **"Create a proposal to..."** - Draft and analyze new proposals\n' +
        '• **"Analyze proposal"** - Check ethics compatibility and cross-domain impacts\n\n' +
        'Try asking me about any of these topics!',
        'assistant'
      );
    }
  };

  const extractProposalFromMessage = (message: string): Partial<GovernanceProposal> => {
    // Simple extraction logic - in a real app, this would be more sophisticated
    const title = message.replace(/create\s+(a\s+)?proposal\s+(to\s+)?/i, '').trim();
    
    // Detect domain based on keywords
    let domain = 'human-rights'; // default
    const domainKeywords = {
      'animal-welfare': ['animal', 'wildlife', 'zoo', 'farm', 'pet'],
      'music-industry': ['music', 'artist', 'song', 'copyright'],
      'environment': ['climate', 'carbon', 'pollution', 'sustainability'],
      'technology-ethics': ['ai', 'algorithm', 'data', 'privacy'],
      'economic-policy': ['economy', 'budget', 'tax', 'finance']
    };
    
    for (const [domainName, keywords] of Object.entries(domainKeywords)) {
      if (keywords.some(keyword => message.toLowerCase().includes(keyword))) {
        domain = domainName;
        break;
      }
    }
    
    // Detect type based on keywords
    let type: GovernanceProposal['type'] = 'policy_change'; // default
    if (message.toLowerCase().includes('ethic')) type = 'ethics_evolution';
    if (message.toLowerCase().includes('resource') || message.toLowerCase().includes('budget')) type = 'resource_allocation';
    if (message.toLowerCase().includes('structure') || message.toLowerCase().includes('organization')) type = 'structural_change';
    
    return {
      title: title.charAt(0).toUpperCase() + title.slice(1),
      description: `Proposal to ${title.toLowerCase()}`,
      type,
      domain,
      author: 'AI Assistant User'
    };
  };

  const analyzeCurrentProposal = async () => {
    if (!draftProposal) return;

    addMessage('Analyzing proposal...', 'assistant');

    // Ethics compatibility analysis
    const ethicsResult = await mcpClient.validateEthicsCompatibility(draftProposal);
    let ethicsAnalysis: EthicsCompatibilityResult | undefined;
    
    if (ethicsResult.success) {
      ethicsAnalysis = ethicsResult.data;
      const ethicsMessage = `**Ethics Compatibility Analysis:**\n\n` +
        `${ethicsAnalysis.compatible ? '✅ Compatible' : '❌ Conflicts detected'}\n\n` +
        (ethicsAnalysis.conflicts.length > 0 ? 
          `**Conflicts:**\n${ethicsAnalysis.conflicts.map(c => `• ${c}`).join('\n')}\n\n` : '') +
        (ethicsAnalysis.recommendations.length > 0 ? 
          `**Recommendations:**\n${ethicsAnalysis.recommendations.map(r => `• ${r}`).join('\n')}\n\n` : '') +
        (ethicsAnalysis.requiredUpdates.length > 0 ? 
          `**Required Updates:**\n${ethicsAnalysis.requiredUpdates.map(u => `• ${u}`).join('\n')}` : '');
      
      addMessage(ethicsMessage, 'assistant', { ethicsAnalysis });
    }

    // Cross-domain impact analysis
    const crossDomainResult = await mcpClient.analyzeCrossDomainImpact(draftProposal);
    let crossDomainAnalysis: CrossDomainAnalysis | undefined;
    
    if (crossDomainResult.success) {
      crossDomainAnalysis = crossDomainResult.data;
      const crossDomainMessage = `**Cross-Domain Impact Analysis:**\n\n` +
        `**Affected Domains:** ${crossDomainAnalysis.affectedDomains.join(', ')}\n\n` +
        `**Impact Details:**\n${crossDomainAnalysis.impacts.map(impact => 
          `• ${impact.domain}: ${impact.impactLevel} impact - ${impact.description}`
        ).join('\n')}\n\n` +
        (crossDomainAnalysis.synergies.length > 0 ? 
          `**Synergies:**\n${crossDomainAnalysis.synergies.map(s => `• ${s}`).join('\n')}\n\n` : '') +
        (crossDomainAnalysis.risks.length > 0 ? 
          `**Risks:**\n${crossDomainAnalysis.risks.map(r => `• ${r}`).join('\n')}` : '');
      
      addMessage(crossDomainMessage, 'assistant', { crossDomainAnalysis });
    }

    // Summary and recommendations
    const summaryMessage = `**Analysis Summary:**\n\n` +
      `Your proposal shows ${ethicsAnalysis?.compatible ? 'good' : 'potential'} ethics compatibility ` +
      `and affects ${crossDomainAnalysis?.affectedDomains.length || 0} domains. ` +
      `${ethicsAnalysis?.conflicts.length ? 'Consider addressing the ethics conflicts before proceeding.' : ''} ` +
      `${crossDomainAnalysis?.risks.length ? 'Pay attention to the identified cross-domain risks.' : ''}\n\n` +
      `Would you like me to help you refine the proposal or create it in the forum?`;
    
    addMessage(summaryMessage, 'assistant');
  };

  const createProposalInForum = async () => {
    if (!draftProposal) return;

    const result = await mcpClient.createProposal(
      draftProposal.title!,
      draftProposal.description!,
      draftProposal.type!,
      draftProposal.domain!,
      draftProposal.author!
    );

    if (result.success) {
      addMessage(
        `✅ Proposal created successfully! You can view it in the forum or on GitHub.`,
        'assistant'
      );
      setDraftProposal(null);
    } else {
      addMessage('Failed to create proposal. Please try again.', 'assistant');
    }
  };

  return (
    <div className="container mx-auto px-4 py-8 max-w-4xl">
      <div className="mb-8">
        <h1 className="text-3xl font-bold">AI Governance Assistant</h1>
        <p className="text-gray-600 mt-2">
          Analyze proposals, check ethics compatibility, and understand cross-domain impacts
        </p>
      </div>

      <Card className="h-[600px] flex flex-col">
        <CardHeader>
          <CardTitle className="text-lg">Chat with DAHAO AI</CardTitle>
          <CardDescription>
            Powered by your MCP server with ethics validation and cross-domain analysis
          </CardDescription>
        </CardHeader>
        
        <CardContent className="flex-1 flex flex-col">
          {/* Messages */}
          <div className="flex-1 overflow-auto space-y-4 mb-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div
                  className={`max-w-[80%] p-3 rounded-lg ${
                    message.role === 'user'
                      ? 'bg-blue-600 text-white'
                      : 'bg-gray-100 text-gray-900'
                  }`}
                >
                  <div className="whitespace-pre-wrap">{message.content}</div>
                  
                  {/* Show metadata if available */}
                  {message.metadata?.proposal && (
                    <div className="mt-3 p-2 bg-white/10 rounded text-xs">
                      <strong>Draft Proposal:</strong> {message.metadata.proposal.title}
                    </div>
                  )}
                  
                  {message.metadata?.ethicsAnalysis && (
                    <div className="mt-2">
                      <Badge className={message.metadata.ethicsAnalysis.compatible ? 'bg-green-600' : 'bg-red-600'}>
                        Ethics: {message.metadata.ethicsAnalysis.compatible ? 'Compatible' : 'Conflicts'}
                      </Badge>
                    </div>
                  )}
                  
                  <div className="text-xs opacity-70 mt-1">
                    {message.timestamp.toLocaleTimeString()}
                  </div>
                </div>
              </div>
            ))}
            
            {loading && (
              <div className="flex justify-start">
                <div className="bg-gray-100 text-gray-900 p-3 rounded-lg">
                  <div className="animate-pulse">Analyzing...</div>
                </div>
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>

          {/* Quick Actions */}
          {draftProposal && (
            <div className="mb-4 p-3 bg-blue-50 rounded-lg">
              <p className="text-sm font-medium mb-2">Draft Proposal: {draftProposal.title}</p>
              <div className="flex gap-2">
                <Button size="sm" onClick={analyzeCurrentProposal} disabled={loading}>
                  Analyze
                </Button>
                <Button size="sm" variant="outline" onClick={createProposalInForum} disabled={loading}>
                  Create in Forum
                </Button>
                <Button size="sm" variant="outline" onClick={() => setDraftProposal(null)}>
                  Clear
                </Button>
              </div>
            </div>
          )}

          {/* Input */}
          <form onSubmit={handleSubmit} className="flex gap-2">
            <input
              type="text"
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              placeholder="Ask about governance, create proposals, analyze ethics..."
              className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              disabled={loading}
            />
            <Button type="submit" disabled={loading || !inputValue.trim()}>
              Send
            </Button>
          </form>
        </CardContent>
      </Card>
    </div>
  );
}
```

## File: app/agents/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 31078 bytes
- Created: 2025-06-09 13:20:30
- Modified: 2025-06-09 13:20:30

### Code

```typescript
'use client';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Bot, Users, Shield, Brain, Network, Settings, GitBranch, MessageCircle } from 'lucide-react';

export default function AgentsPage() {
  return (
    <div className="container mx-auto px-4 py-16">
      <div className="max-w-6xl mx-auto">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <h1 className="text-4xl font-bold tracking-tight mb-4">
            AI Agent Architecture
          </h1>
          <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto">
            Understanding the three-layer agent system: Personal agents that embody your values, 
            system agents that maintain integrity, and domain agents that provide expertise.
          </p>
          <Badge variant="outline" className="mb-8">Technical Deep Dive</Badge>
        </div>

        {/* Agent Hierarchy */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Agent Hierarchy</h2>
          
          <div className="space-y-8">
            {/* Personal Agents */}
            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <Bot className="h-8 w-8 text-blue-500" />
                  <div>
                    <CardTitle>Personal Agents</CardTitle>
                    <CardDescription>Your AI partner that embodies your values and represents you in governance</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid gap-6 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3">Configuration Example</h4>
                    <div className="bg-muted p-4 rounded-lg font-mono text-sm">
                      <div className="text-blue-600"># personal-agents/sarah-agent/character.yml</div>
                      <div>user: "sarah_contributor"</div>
                      <div>github_account: "sarah-github"</div>
                      <div></div>
                      <div>adopted_ethics:</div>
                      <div>&nbsp;&nbsp;core_bundle: "v1.1"</div>
                      <div>&nbsp;&nbsp;animal_welfare: "v1.0"</div>
                      <div>&nbsp;&nbsp;music_industry: "v0.9"</div>
                      <div></div>
                      <div>decision_process:</div>
                      <div>&nbsp;&nbsp;priority: "personal_values &gt; domain &gt; core"</div>
                      <div>&nbsp;&nbsp;reasoning_style: "collaborative"</div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">Capabilities</h4>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <Shield className="h-4 w-4 text-green-500" />
                        <span>Ethics consistency checking</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <Brain className="h-4 w-4 text-purple-500" />
                        <span>Proposal impact analysis</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <MessageCircle className="h-4 w-4 text-blue-500" />
                        <span>Structured reasoning output</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <Network className="h-4 w-4 text-orange-500" />
                        <span>Cross-domain collaboration</span>
                      </li>
                    </ul>
                    <div className="mt-4">
                      <h5 className="font-semibold mb-2">Example Analysis Output</h5>
                      <div className="bg-blue-50 p-3 rounded text-sm">
                        <div className="font-mono text-green-600">agent: sarah-agent</div>
                        <div>ethics_analysis:</div>
                        <div>&nbsp;&nbsp;core_alignment: "✓ Compatible"</div>
                        <div>&nbsp;&nbsp;personal_alignment: "✓ Strong match"</div>
                        <div>&nbsp;&nbsp;concerns: ["implementation_timeline"]</div>
                        <div>recommendation: "APPROVE with conditions"</div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* System Agents */}
            <Card className="border-l-4 border-l-purple-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <Shield className="h-8 w-8 text-purple-500" />
                  <div>
                    <CardTitle>System Agents</CardTitle>
                    <CardDescription>Specialized agents that maintain system integrity and governance processes</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Settings className="h-4 w-4" />
                      Core Governance Agent
                    </h4>
                    <div className="text-sm space-y-1">
                      <div className="bg-purple-50 p-2 rounded">
                        <strong>Authority:</strong> Main branch protection
                      </div>
                      <div className="text-muted-foreground">
                        • Validates ethics proposals<br/>
                        • Manages voting systems<br/>
                        • Handles version conflicts<br/>
                        • Authorizes migrations
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Shield className="h-4 w-4" />
                      Ethics Compliance Agent
                    </h4>
                    <div className="text-sm space-y-1">
                      <div className="bg-purple-50 p-2 rounded">
                        <strong>Authority:</strong> Compliance monitoring
                      </div>
                      <div className="text-muted-foreground">
                        • Monitors agent behavior<br/>
                        • Flags ethical violations<br/>
                        • Suggests remediation<br/>
                        • Maintains audit trail
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Brain className="h-4 w-4" />
                      Work Evaluation Agent
                    </h4>
                    <div className="text-sm space-y-1">
                      <div className="bg-purple-50 p-2 rounded">
                        <strong>Authority:</strong> Performance assessment
                      </div>
                      <div className="text-muted-foreground">
                        • Code quality scoring<br/>
                        • Ethical consistency tracking<br/>
                        • Community value measurement<br/>
                        • Real impact assessment
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Domain Agents */}
            <Card className="border-l-4 border-l-green-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <Network className="h-8 w-8 text-green-500" />
                  <div>
                    <CardTitle>Domain Expert Agents</CardTitle>
                    <CardDescription>Specialized agents with deep knowledge in specific domains</CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-3">🐾 Animal Welfare Agent</h4>
                    <div className="bg-green-50 p-3 rounded text-sm">
                      <div className="font-semibold mb-2">Specialization:</div>
                      <ul className="space-y-1 text-muted-foreground">
                        <li>• Five freedoms expertise</li>
                        <li>• Scientific research analysis</li>
                        <li>• Welfare measurement metrics</li>
                        <li>• Implementation feasibility</li>
                      </ul>
                      <div className="mt-3 font-mono text-xs bg-white p-2 rounded">
                        ethics_domain: "animal-welfare@v1.0"<br/>
                        knowledge_base: "scientific_literature"<br/>
                        update_frequency: "quarterly"
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">🎵 Music Industry Agent</h4>
                    <div className="bg-green-50 p-3 rounded text-sm">
                      <div className="font-semibold mb-2">Specialization:</div>
                      <ul className="space-y-1 text-muted-foreground">
                        <li>• Royalty distribution models</li>
                        <li>• Artist rights advocacy</li>
                        <li>• Fair platform economics</li>
                        <li>• Creative freedom balance</li>
                      </ul>
                      <div className="mt-3 font-mono text-xs bg-white p-2 rounded">
                        ethics_domain: "music-industry@v1.0"<br/>
                        focus_areas: ["royalties", "artist_rights"]<br/>
                        collaboration: "cross_domain"
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">🌍 Environment Agent</h4>
                    <div className="bg-green-50 p-3 rounded text-sm">
                      <div className="font-semibold mb-2">Specialization:</div>
                      <ul className="space-y-1 text-muted-foreground">
                        <li>• Sustainability frameworks</li>
                        <li>• Ecosystem impact analysis</li>
                        <li>• Carbon footprint assessment</li>
                        <li>• Circular economy principles</li>
                      </ul>
                      <div className="mt-3 font-mono text-xs bg-white p-2 rounded">
                        ethics_domain: "environment@v1.0"<br/>
                        impact_tracking: "quantitative"<br/>
                        verification: "third_party"
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Agent Communication */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Agent-to-Agent Communication</h2>
          
          <Card>
            <CardHeader>
              <CardTitle>Structured Communication Protocol</CardTitle>
              <CardDescription>How agents collaborate and resolve conflicts through GitHub comments</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                <div>
                  <h4 className="font-semibold mb-3">Communication Flow Example</h4>
                  <div className="space-y-4">
                    <div className="bg-blue-50 p-4 rounded border-l-4 border-l-blue-500">
                      <div className="font-semibold mb-2">@sarah-agent (Personal Agent)</div>
                      <div className="font-mono text-sm bg-white p-3 rounded">
                        ```yaml<br/>
                        agent: sarah-agent<br/>
                        analysis_type: "initial_review"<br/>
                        ethics_check:<br/>
                        &nbsp;&nbsp;core_compatibility: "✓ PASS"<br/>
                        &nbsp;&nbsp;animal_welfare_impact: "positive"<br/>
                        &nbsp;&nbsp;personal_alignment: "strong"<br/>
                        recommendation: "APPROVE"<br/>
                        concerns: ["budget_allocation", "timeline"]<br/>
                        suggestions:<br/>
                        &nbsp;&nbsp;- "Add phased implementation"<br/>
                        &nbsp;&nbsp;- "Include success metrics"<br/>
                        ```
                      </div>
                    </div>

                    <div className="bg-purple-50 p-4 rounded border-l-4 border-l-purple-500">
                      <div className="font-semibold mb-2">@ethics-compliance-agent (System Agent)</div>
                      <div className="font-mono text-sm bg-white p-3 rounded">
                        ```yaml<br/>
                        agent: ethics-compliance-agent<br/>
                        validation_result:<br/>
                        &nbsp;&nbsp;ethics_compatibility: "✓ COMPATIBLE"<br/>
                        &nbsp;&nbsp;version_conflicts: "none_detected"<br/>
                        &nbsp;&nbsp;migration_required: false<br/>
                        governance_path: "threshold_vote_60_percent"<br/>
                        compliance_notes: "Aligns with transparency@v1.0"<br/>
                        ```
                      </div>
                    </div>

                    <div className="bg-green-50 p-4 rounded border-l-4 border-l-green-500">
                      <div className="font-semibold mb-2">@animal-welfare-agent (Domain Agent)</div>
                      <div className="font-mono text-sm bg-white p-3 rounded">
                        ```yaml<br/>
                        agent: animal-welfare-agent<br/>
                        domain_analysis:<br/>
                        &nbsp;&nbsp;scientific_validity: "peer_reviewed_support"<br/>
                        &nbsp;&nbsp;welfare_impact: "significant_positive"<br/>
                        &nbsp;&nbsp;implementation_feasibility: "high"<br/>
                        cross_reference: "similar_implementations_eu"<br/>
                        enhancement_suggestions:<br/>
                        &nbsp;&nbsp;- "Add welfare_measurement_framework"<br/>
                        &nbsp;&nbsp;- "Include_quarterly_assessment"<br/>
                        ```
                      </div>
                    </div>
                  </div>
                </div>

                <div>
                  <h4 className="font-semibold mb-3">Conflict Resolution</h4>
                  <div className="bg-yellow-50 p-4 rounded">
                    <div className="font-semibold mb-2">When agents disagree:</div>
                    <ol className="list-decimal list-inside space-y-2 text-sm">
                      <li><strong>Automatic Escalation:</strong> System agent flags conflicting recommendations</li>
                      <li><strong>Human Mediation:</strong> Community discussion thread opened</li>
                      <li><strong>Extended Analysis:</strong> Agents provide detailed reasoning</li>
                      <li><strong>Community Vote:</strong> Human wisdom resolves complex ethical questions</li>
                    </ol>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Agent Evolution */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Agent Evolution & Learning</h2>
          
          <div className="grid gap-6 md:grid-cols-2">
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <GitBranch className="h-5 w-5" />
                  Ethics Version Adoption
                </CardTitle>
                <CardDescription>How agents adapt to evolving ethical frameworks</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <h4 className="font-semibold mb-2">Version Migration Process</h4>
                    <div className="text-sm space-y-2">
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <span>Community votes on ethics update</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span>Agents receive compatibility analysis</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>Personal agents choose adoption timeline</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                        <span>Gradual transition with conflict resolution</span>
                      </div>
                    </div>
                  </div>
                  <div className="bg-muted p-3 rounded font-mono text-sm">
                    <div># Agent version compatibility matrix</div>
                    <div>core_ethics: v1.1 (latest)</div>
                    <div>animal_welfare: v1.0 → v1.1 (optional)</div>
                    <div>backward_compatible: 2 versions</div>
                    <div>migration_window: 6 months</div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Brain className="h-5 w-5" />
                  Performance Improvement
                </CardTitle>
                <CardDescription>How agents learn from community feedback</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <h4 className="font-semibold mb-2">Learning Mechanisms</h4>
                    <ul className="text-sm space-y-2">
                      <li className="flex items-center gap-2">
                        <Users className="h-4 w-4 text-blue-500" />
                        <span>Community feedback on agent recommendations</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <Network className="h-4 w-4 text-green-500" />
                        <span>Cross-agent collaboration patterns</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <Settings className="h-4 w-4 text-purple-500" />
                        <span>Personal agent customization by users</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <Brain className="h-4 w-4 text-orange-500" />
                        <span>System-wide pattern recognition</span>
                      </li>
                    </ul>
                  </div>
                  <div className="bg-green-50 p-3 rounded">
                    <div className="font-semibold mb-2">Performance Metrics</div>
                    <div className="grid grid-cols-2 gap-2 text-sm">
                      <div>Ethics Consistency: 94%</div>
                      <div>Community Approval: 87%</div>
                      <div>Conflict Resolution: 91%</div>
                      <div>Implementation Success: 83%</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Network Learning Effects */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Network Learning Effects</h2>
          
          <div className="space-y-8">
            <Card>
              <CardHeader>
                <CardTitle>Cross-Domain Intelligence</CardTitle>
                <CardDescription>Agents learn from the entire network, not just their DAHAO</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  <p className="text-muted-foreground">
                    Agents don't just learn within their DAHAO - they learn from the entire network, 
                    creating unprecedented cross-pollination of ideas and solutions.
                  </p>
                  <div className="grid gap-4 md:grid-cols-3">
                    <div>
                      <h4 className="font-semibold mb-2 text-green-600">🐾 Animal Welfare Patterns</h4>
                      <p className="text-sm text-muted-foreground mb-2">
                        Monitoring patterns for behavior analysis
                      </p>
                      <div className="text-center text-lg">↓</div>
                      <h5 className="font-semibold text-blue-600">🌍 Environmental Adaptation</h5>
                      <p className="text-xs text-muted-foreground">
                        Ecosystem health and biodiversity tracking
                      </p>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-2 text-purple-600">🎵 Music Royalty Algorithms</h4>
                      <p className="text-sm text-muted-foreground mb-2">
                        Fair value distribution mechanisms
                      </p>
                      <div className="text-center text-lg">↓</div>
                      <h5 className="font-semibold text-orange-600">⚖️ General Fair Distribution</h5>
                      <p className="text-xs text-muted-foreground">
                        Applied across all domains
                      </p>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-2 text-indigo-600">🏛️ Governance Innovations</h4>
                      <p className="text-sm text-muted-foreground mb-2">
                        Democratic decision mechanisms
                      </p>
                      <div className="text-center text-lg">↓</div>
                      <h5 className="font-semibold text-teal-600">🔄 Cross-Domain Democracy</h5>
                      <p className="text-xs text-muted-foreground">
                        Best practices spread network-wide
                      </p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Fork-Enhanced Evolution</CardTitle>
                <CardDescription>When DAHAOs fork, agents carry successful patterns forward</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-6 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3">Pattern Transfer</h4>
                    <div className="space-y-3">
                      <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-blue-800">Proven Ethics Frameworks</div>
                          <div className="text-sm text-blue-600">Transfer instantly to new forks</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-green-800">Best Practices</div>
                          <div className="text-sm text-green-600">Propagate across experiments</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-3 p-3 bg-yellow-50 rounded-lg">
                        <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-yellow-800">Failed Patterns</div>
                          <div className="text-sm text-yellow-600">Documented and avoided</div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">Innovation Acceleration</h4>
                    <div className="space-y-3">
                      <div className="flex items-center gap-3 p-3 bg-purple-50 rounded-lg">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-purple-800">Parallel Development</div>
                          <div className="text-sm text-purple-600">Multiple approaches tested simultaneously</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-3 p-3 bg-indigo-50 rounded-lg">
                        <div className="w-2 h-2 bg-indigo-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-indigo-800">Rapid Learning</div>
                          <div className="text-sm text-indigo-600">Success patterns spread instantly</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-3 p-3 bg-red-50 rounded-lg">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <div>
                          <div className="font-semibold text-red-800">Failure Prevention</div>
                          <div className="text-sm text-red-600">Known problems avoided automatically</div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Intellectual Value Mining</CardTitle>
                <CardDescription>Agent contributions create measurable, rewarded value</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <p className="text-muted-foreground">
                    Agent contributions create measurable value that drives both individual rewards 
                    and network-wide improvements, creating exponential growth through collaboration.
                  </p>
                  <div className="grid gap-4 md:grid-cols-2">
                    <div>
                      <h4 className="font-semibold mb-3">Value Creation</h4>
                      <div className="space-y-2">
                        <div className="flex justify-between items-center p-2 bg-green-50 rounded">
                          <span className="font-medium text-green-800">System Improvements</span>
                          <span className="text-sm text-green-600">Token rewards</span>
                        </div>
                        <div className="flex justify-between items-center p-2 bg-blue-50 rounded">
                          <span className="font-medium text-blue-800">Cross-domain Innovations</span>
                          <span className="text-sm text-blue-600">Bonus multipliers</span>
                        </div>
                        <div className="flex justify-between items-center p-2 bg-purple-50 rounded">
                          <span className="font-medium text-purple-800">Network Amplification</span>
                          <span className="text-sm text-purple-600">Compound returns</span>
                        </div>
                      </div>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-3">Growth Model</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm">Human + AI collaboration</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm">Cross-network learning</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm">Fork-driven innovation</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm font-semibold">= Exponential growth</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Call to Action */}
        <div className="text-center">
          <h2 className="text-2xl font-semibold mb-4">Deploy Your Agent</h2>
          <p className="text-muted-foreground mb-6 max-w-2xl mx-auto">
            Ready to create your personal AI agent that embodies your values? 
            Join DAHAO and be part of the first human-AI collaborative governance system.
          </p>
          <div className="space-x-4">
            <Badge variant="outline" className="mr-2">Coming Soon</Badge>
            <span className="text-sm text-muted-foreground">
              Agent deployment will be available in Phase 2 of our roadmap
            </span>
          </div>
        </div>
      </div>
    </div>
  );
}
```

## File: app/about/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 48002 bytes
- Created: 2025-06-09 13:01:50
- Modified: 2025-06-09 13:01:50

### Code

```typescript
'use client';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { GitBranchIcon, Users2Icon, BrainIcon, FileTextIcon, ArrowRightIcon, LayersIcon } from 'lucide-react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export default function AboutPage() {
  return (
    <div className="container mx-auto px-4 py-16">
      <div className="max-w-5xl mx-auto">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <h1 className="text-4xl font-bold tracking-tight mb-4">
            Understanding DAHAO
          </h1>
          <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto">
            The world's first platform for evolving ethical systems through human-AI collaboration, 
            using Git-like versioning to democratically develop moral frameworks.
          </p>
        </div>

        {/* Core Innovation */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">The Core Innovation</h2>
          <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
            <Card>
              <CardHeader>
                <GitBranchIcon className="h-8 w-8 mb-2 text-blue-500" />
                <CardTitle>Ethics as Code</CardTitle>
                <CardDescription>
                  Moral principles are versioned like software, with clear evolution paths and democratic updates
                </CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground">
                  Just as code evolves through versions (v1.0 → v1.1 → v2.0), ethical frameworks can be 
                  systematically improved through community consensus and practical testing.
                </p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <BrainIcon className="h-8 w-8 mb-2 text-green-500" />
                <CardTitle>AI Agent Partners</CardTitle>
                <CardDescription>
                  Personal AI agents represent your values while analyzing proposals through ethical lenses
                </CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground">
                  Each member deploys an AI agent that embodies their personal ethics while respecting 
                  community principles, creating a hybrid decision-making process.
                </p>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <Users2Icon className="h-8 w-8 mb-2 text-purple-500" />
                <CardTitle>Collective Intelligence</CardTitle>
                <CardDescription>
                  Human wisdom combined with AI analysis creates unprecedented organizational intelligence
                </CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground">
                  The collaboration between human intuition and AI analytical capabilities produces 
                  more thoughtful, comprehensive decisions than either could achieve alone.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* System Architecture */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">System Architecture</h2>
          <div className="space-y-8">
            {/* Core Ethics Layer */}
            <Card>
              <CardHeader>
                <div className="flex items-center gap-3">
                  <LayersIcon className="h-6 w-6 text-blue-500" />
                  <CardTitle>Core Ethics Layer</CardTitle>
                </div>
                <CardDescription>Foundational principles that govern all DAHAO activities</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2">Human Equality</h4>
                    <p className="text-sm text-muted-foreground">
                      All humans have equal fundamental rights regardless of background
                    </p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Transparency</h4>
                    <p className="text-sm text-muted-foreground">
                      All decisions and processes must be open and auditable
                    </p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Harm Prevention</h4>
                    <p className="text-sm text-muted-foreground">
                      Direct and indirect harm prevention with proactive measures
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Domain Ethics Layer */}
            <Card>
              <CardHeader>
                <div className="flex items-center gap-3">
                  <FileTextIcon className="h-6 w-6 text-green-500" />
                  <CardTitle>Domain-Specific Ethics</CardTitle>
                </div>
                <CardDescription>Specialized moral frameworks for different areas of focus</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2">Animal Welfare</h4>
                    <p className="text-sm text-muted-foreground">
                      Five freedoms principle and natural behavior rights for all animals
                    </p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Music Industry</h4>
                    <p className="text-sm text-muted-foreground">
                      Fair royalty distribution and artist empowerment principles
                    </p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Environment</h4>
                    <p className="text-sm text-muted-foreground">
                      Sustainability and ecosystem preservation frameworks
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Agent Layer */}
            <Card>
              <CardHeader>
                <div className="flex items-center gap-3">
                  <BrainIcon className="h-6 w-6 text-purple-500" />
                  <CardTitle>AI Agent Ecosystem</CardTitle>
                </div>
                <CardDescription>Personal and system agents working together for better decisions</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-2">Personal Agents</h4>
                    <p className="text-sm text-muted-foreground mb-2">
                      Each user's AI agent embodies their values and analyzes proposals
                    </p>
                    <ul className="text-xs text-muted-foreground space-y-1">
                      <li>• Adopts specific ethics versions</li>
                      <li>• Provides ethical consistency checks</li>
                      <li>• Suggests improvements to proposals</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">System Agents</h4>
                    <p className="text-sm text-muted-foreground mb-2">
                      Specialized agents that maintain system integrity and governance
                    </p>
                    <ul className="text-xs text-muted-foreground space-y-1">
                      <li>• Core governance management</li>
                      <li>• Ethics compliance monitoring</li>
                      <li>• Work evaluation and metrics</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Revolutionary Economics */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Revolutionary Economics</h2>
          
          <div className="space-y-8">
            <Card>
              <CardHeader>
                <CardTitle>Breaking the False Dichotomy</CardTitle>
                <CardDescription>Eliminating impossible choices through dual benefit models</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4">
                  Traditional economics forces impossible choices: profit OR impact, growth OR sustainability.
                  DAHAO eliminates these through the dual benefit model where every profitable transaction
                  funds social impact and every social improvement increases platform value.
                </p>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-2 text-red-600">Traditional: False Choices</h4>
                    <ul className="text-sm text-muted-foreground space-y-1">
                      <li>• Profit OR impact</li>
                      <li>• Growth OR sustainability</li>
                      <li>• Competition OR collaboration</li>
                      <li>• Individual OR collective success</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 text-green-600">DAHAO: Aligned Incentives</h4>
                    <ul className="text-sm text-muted-foreground space-y-1">
                      <li>• Profit THROUGH impact</li>
                      <li>• Growth ENABLES sustainability</li>
                      <li>• Competition DRIVES collaboration</li>
                      <li>• Individual AMPLIFIES collective</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>From Charity to Sustainability</CardTitle>
                <CardDescription>Breaking the endless cycle of dependency</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-6 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3 text-red-600">Traditional Model</h4>
                    <div className="space-y-2">
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span className="text-sm">Beg for funding</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span className="text-sm">Spend on solutions</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span className="text-sm">Run out of money</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span className="text-sm">Beg again (endless cycle)</span>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3 text-green-600">DAHAO Model</h4>
                    <div className="space-y-2">
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span className="text-sm">Earn through value creation</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span className="text-sm">Grow sustainable solutions</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span className="text-sm">Create measurable impact</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span className="text-sm">Earn more (upward spiral)</span>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="mt-6 p-4 bg-green-50 rounded-lg">
                  <h5 className="font-semibold mb-2">Example: Animal Welfare DAHAO</h5>
                  <p className="text-sm text-green-800">
                    Sells smart pet collars → Revenue funds street animal care → 
                    Better outcomes attract more users → More revenue → Greater impact
                  </p>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Agent Mining: Thought as Value</CardTitle>
                <CardDescription>Intellectual contribution becomes the new mining</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <p className="text-muted-foreground">
                    Intellectual contribution becomes the new mining. Transform your daily API costs 
                    into profitable contribution to humanity.
                  </p>
                  <div className="grid gap-4 md:grid-cols-2">
                    <div>
                      <h4 className="font-semibold mb-2">Your Mining Rig</h4>
                      <ul className="space-y-2 text-sm">
                        <li className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span>Connect your LLM API key</span>
                        </li>
                        <li className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span>Agent identifies system improvements</span>
                        </li>
                        <li className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span>Develop and propose innovations</span>
                        </li>
                        <li className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span>Earn rewards for accepted contributions</span>
                        </li>
                      </ul>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-2">Economic Model</h4>
                      <div className="space-y-2 text-sm">
                        <div className="flex justify-between">
                          <span>Initial cost:</span>
                          <span className="font-semibold">$5/day API fees</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Potential return:</span>
                          <span className="font-semibold text-green-600">Token rewards</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Break-even:</span>
                          <span className="font-semibold text-blue-600">First successful merge</span>
                        </div>
                        <div className="flex justify-between">
                          <span>Long-term:</span>
                          <span className="font-semibold text-purple-600">Profitable contribution</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Evolution Path */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Evolution Path</h2>
          <div className="space-y-6">
            <div className="flex items-center gap-4 p-6 border rounded-lg">
              <div className="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center font-semibold">
                1
              </div>
              <div>
                <h3 className="font-semibold mb-1">Phase 1: Foundation (0-6 months)</h3>
                <p className="text-sm text-muted-foreground">
                  GitHub + Claude Code integration. Forum-style discussions with basic agent interactions. 
                  Founder control with community input.
                </p>
              </div>
            </div>
            
            <div className="flex items-center gap-4 p-6 border rounded-lg">
              <div className="flex-shrink-0 w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center font-semibold">
                2
              </div>
              <div>
                <h3 className="font-semibold mb-1">Phase 2: Threshold Democracy (6-18 months)</h3>
                <p className="text-sm text-muted-foreground">
                  Community voting activated. Agent-human dual voting system. Cross-domain collaboration begins.
                </p>
              </div>
            </div>
            
            <div className="flex items-center gap-4 p-6 border rounded-lg">
              <div className="flex-shrink-0 w-8 h-8 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center font-semibold">
                3
              </div>
              <div>
                <h3 className="font-semibold mb-1">Phase 3: Full Autonomy (18+ months)</h3>
                <p className="text-sm text-muted-foreground">
                  Complete community control. Advanced agent capabilities. Network of interconnected DAHAOs.
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* Leveraging Existing Infrastructure */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Leveraging Existing Infrastructure</h2>
          
          <Card className="mb-8">
            <CardHeader>
              <CardTitle>The DAHAO Strategy: Build Fast, Customize Later</CardTitle>
              <CardDescription>
                DAHAO's approach is pragmatic: use existing powerful systems to grow rapidly, then develop custom solutions only when necessary.
              </CardDescription>
            </CardHeader>
          </Card>

          <div className="space-y-8">
            {/* Three Phases */}
            <div className="grid gap-6 md:grid-cols-3">
              <Card className="bg-blue-50 border-blue-200">
                <CardHeader>
                  <CardTitle className="text-blue-800">Phase 1: Leverage Everything</CardTitle>
                  <CardDescription>Use existing powerful platforms</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span><strong>GitHub Actions:</strong> Automation and workflows</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span><strong>Claude Code:</strong> AI agent reasoning</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span><strong>GitHub Copilot:</strong> Development tasks</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span><strong>Avalanche:</strong> Blockchain verification</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span><strong>Existing LLM APIs:</strong> Agent intelligence</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="bg-green-50 border-green-200">
                <CardHeader>
                  <CardTitle className="text-green-800">Phase 2: Enhance What's Missing</CardTitle>
                  <CardDescription>Add unique value layers</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span><strong>Ethics Layer:</strong> Moral reasoning to existing tools</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span><strong>Cross-Domain Intelligence:</strong> Connect isolated systems</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span><strong>Community Governance:</strong> Democratic decision-making</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span><strong>Value Distribution:</strong> Fair compensation mechanisms</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>

              <Card className="bg-purple-50 border-purple-200">
                <CardHeader>
                  <CardTitle className="text-purple-800">Phase 3: Custom When Needed</CardTitle>
                  <CardDescription>Build only when necessary</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <p className="text-sm text-muted-foreground">
                      Only build proprietary systems when existing tools can't handle:
                    </p>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>Complex multi-agent coordination</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>Advanced cross-domain pattern recognition</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>Novel governance mechanisms</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>Specialized economic models</span>
                      </li>
                    </ul>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* GitHub Copilot Integration Example */}
            <Card>
              <CardHeader>
                <CardTitle>Example: GitHub Copilot Integration</CardTitle>
                <CardDescription>Instead of competing with Copilot, DAHAO agents enhance it</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3">How DAHAO Enhances Copilot</h4>
                    <div className="space-y-2">
                      <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <span className="text-sm">Use Copilot for code generation tasks</span>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span className="text-sm">Add ethical validation before Copilot acts</span>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span className="text-sm">Coordinate multiple Copilot instances across domains</span>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-orange-50 rounded">
                        <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                        <span className="text-sm">Apply community governance to Copilot's suggestions</span>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-indigo-50 rounded">
                        <div className="w-2 h-2 bg-indigo-500 rounded-full"></div>
                        <span className="text-sm">Share successful Copilot patterns across DAHAOs</span>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">The Advantage: Speed to Market</h4>
                    <div className="bg-gradient-to-r from-green-50 to-blue-50 p-4 rounded-lg">
                      <p className="text-sm text-muted-foreground mb-3">
                        While others build from scratch, DAHAO organizations:
                      </p>
                      <ul className="space-y-1 text-sm">
                        <li>✅ Launch in weeks using existing infrastructure</li>
                        <li>✅ Iterate rapidly with proven tools</li>
                        <li>✅ Add value through unique governance and ethics</li>
                        <li>✅ Scale using billion-dollar platforms built by tech giants</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Future-Proof Growth */}
            <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200">
              <CardHeader>
                <CardTitle className="text-indigo-800">Future-Proof Growth</CardTitle>
                <CardDescription>As new tools emerge, DAHAO instantly adapts</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4">
                  As new tools emerge (better LLMs, advanced blockchain, novel interfaces), DAHAO instantly adapts:
                </p>
                <div className="grid gap-3 md:grid-cols-2">
                  <div className="space-y-2">
                    <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                      <div className="w-2 h-2 bg-indigo-500 rounded-full"></div>
                      <span className="text-sm">No lock-in to proprietary systems</span>
                    </div>
                    <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                      <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                      <span className="text-sm">Modular architecture allows tool swapping</span>
                    </div>
                  </div>
                  <div className="space-y-2">
                    <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span className="text-sm">Community can vote on adopting new technologies</span>
                    </div>
                    <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span className="text-sm">Best practices spread across the network automatically</span>
                    </div>
                  </div>
                </div>
                <div className="mt-4 p-4 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-lg text-center">
                  <p className="font-semibold text-indigo-800">
                    This isn't just faster - it's antifragile. DAHAO gets stronger as the technology ecosystem evolves.
                  </p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Network Intelligence */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Network Intelligence</h2>
          
          <div className="space-y-8">
            <Card>
              <CardHeader>
                <CardTitle>Cross-DAHAO Collaboration</CardTitle>
                <CardDescription>Each DAHAO strengthens the entire network</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4">
                  Each DAHAO strengthens the entire network. When Animal Welfare discovers effective
                  monitoring patterns, Environment DAHAO can fork and adapt them. Success spreads,
                  failures teach, collective intelligence grows exponentially.
                </p>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2 text-green-600">🐾 Animal Welfare</h4>
                    <p className="text-sm text-muted-foreground">
                      Develops monitoring patterns for animal behavior and welfare metrics
                    </p>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl mb-2">→</div>
                    <p className="text-xs text-muted-foreground">Pattern sharing</p>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 text-blue-600">🌍 Environment</h4>
                    <p className="text-sm text-muted-foreground">
                      Adapts monitoring patterns for ecosystem health and biodiversity tracking
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Fork-Driven Innovation</CardTitle>
                <CardDescription>Dissent becomes a driver of innovation</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <p className="text-muted-foreground">
                    Disagree with governance decisions? Fork the DAHAO. Unlike traditional organizations 
                    where disagreement means leaving, DAHAO makes dissent a driver of innovation.
                  </p>
                  <div className="grid gap-4 md:grid-cols-2">
                    <div>
                      <h4 className="font-semibold mb-3">Fork Process</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Keep the ethics framework you believe in</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Modify rules to match your vision</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Run parallel experiments</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                          <span className="text-sm">Best innovations merge back to benefit everyone</span>
                        </div>
                      </div>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-3">Network Benefits</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Multiple approaches tested simultaneously</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Failed experiments provide learning</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Successful patterns propagate rapidly</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm">Innovation accelerates exponentially</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Self-Sustaining Growth Engine */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Self-Sustaining Growth Engine</h2>
          
          <Card className="mb-8">
            <CardHeader>
              <CardTitle>The DAHAO Growth Flywheel</CardTitle>
              <CardDescription>
                DAHAO isn't just a platform - it's a self-reinforcing system that grows stronger with each participant.
              </CardDescription>
            </CardHeader>
          </Card>

          <div className="space-y-8">
            {/* Four-Phase Growth Cycle */}
            <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
              {/* Entry Point */}
              <Card className="bg-green-50 border-green-200">
                <CardHeader>
                  <CardTitle className="text-green-800">Entry Point: Zero Barrier</CardTitle>
                  <CardDescription>Anyone can start immediately</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>GitHub Copilot Free ($0)</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>50 agent requests/month</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>Ethics analysis & community insights</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>No upfront investment</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>

              {/* Value Recognition */}
              <Card className="bg-blue-50 border-blue-200">
                <CardHeader>
                  <CardTitle className="text-blue-800">Value Recognition Phase</CardTitle>
                  <CardDescription>As contributors engage</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Personal agents provide helpful analysis</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Cross-domain insights improve decisions</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Community governance creates impact</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Network effects amplify contributions</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>

              {/* Natural Evolution */}
              <Card className="bg-purple-50 border-purple-200">
                <CardHeader>
                  <CardTitle className="text-purple-800">Natural Evolution</CardTitle>
                  <CardDescription>Value-driven upgrade path</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="p-2 bg-white/70 rounded border-l-4 border-l-green-500">
                      <div className="font-semibold text-sm">Contributors</div>
                      <div className="text-xs text-muted-foreground">Pro ($10/month) unlimited participation</div>
                    </div>
                    <div className="p-2 bg-white/70 rounded border-l-4 border-l-blue-500">
                      <div className="font-semibold text-sm">Domain Leaders</div>
                      <div className="text-xs text-muted-foreground">Pro+ ($39/month) advanced capabilities</div>
                    </div>
                    <div className="p-2 bg-white/70 rounded border-l-4 border-l-purple-500">
                      <div className="font-semibold text-sm">Organizations</div>
                      <div className="text-xs text-muted-foreground">Enterprise ecosystem integration</div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              {/* System Amplification */}
              <Card className="bg-orange-50 border-orange-200">
                <CardHeader>
                  <CardTitle className="text-orange-800">System Amplification</CardTitle>
                  <CardDescription>Each upgrade strengthens network</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                      <span>More premium requests = higher quality reasoning</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                      <span>Advanced features enable sophisticated governance</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                      <span>Greater participation creates network effects</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                      <span>Success attracts new contributors</span>
                    </li>
                  </ul>
                </CardContent>
              </Card>
            </div>

            {/* Exponential Growth Pattern */}
            <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200">
              <CardHeader>
                <CardTitle className="text-indigo-800">Exponential Growth Pattern</CardTitle>
                <CardDescription>Self-reinforcing cycle of value creation</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-center mb-6">
                  <div className="flex items-center gap-3 text-sm">
                    <span className="px-3 py-1 bg-green-100 text-green-800 rounded-full">Free Users</span>
                    <span>→</span>
                    <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full">Value Creation</span>
                    <span>→</span>
                    <span className="px-3 py-1 bg-purple-100 text-purple-800 rounded-full">Upgrades</span>
                    <span>→</span>
                    <span className="px-3 py-1 bg-orange-100 text-orange-800 rounded-full">Enhanced System</span>
                  </div>
                </div>
                <div className="flex items-center justify-center mb-6">
                  <div className="flex items-center gap-3 text-sm">
                    <span className="px-3 py-1 bg-red-100 text-red-800 rounded-full">More Value</span>
                    <span>→</span>
                    <span className="px-3 py-1 bg-yellow-100 text-yellow-800 rounded-full">Attracts More Free Users</span>
                    <span>→</span>
                    <span className="px-3 py-1 bg-pink-100 text-pink-800 rounded-full font-semibold">Cycle Accelerates</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* The Beautiful Economics */}
            <Card>
              <CardHeader>
                <CardTitle>The Beautiful Economics</CardTitle>
                <CardDescription>Everyone wins, network grows exponentially</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3 text-green-600">Value Flow</h4>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <span>Free tier users contribute governance and insights</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <span>Paid tier users fund advanced AI for everyone</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <span>System improvements benefit all participants</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                        <span>Network value grows exponentially, not linearly</span>
                      </li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3 text-indigo-600">Unlike Traditional Organizations</h4>
                    <ul className="space-y-2 text-sm">
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span>No membership fees blocking participation</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span>Value-first rather than payment-first</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span>Organic growth rather than forced monetization</span>
                      </li>
                      <li className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                        <span>Community success drives individual success</span>
                      </li>
                    </ul>
                  </div>
                </div>
                <div className="mt-6 p-4 bg-gradient-to-r from-green-100 to-blue-100 rounded-lg text-center">
                  <p className="font-semibold text-green-800">
                    This creates unprecedented organizational resilience: the more people who find value in DAHAO, 
                    the more valuable it becomes for everyone.
                  </p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Call to Action */}
        <div className="text-center">
          <h2 className="text-2xl font-semibold mb-4">Join the Evolution</h2>
          <p className="text-muted-foreground mb-6 max-w-2xl mx-auto">
            Be part of the first platform where human wisdom and AI analysis combine to create 
            more ethical, transparent, and intelligent organizations.
          </p>
          <div className="space-x-4">
            <Button asChild size="lg">
              <Link href="/api/auth/github">
                Get Started
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
            <Button asChild variant="outline" size="lg">
              <Link href="/constitution">
                Explore Ethics
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
```

## File: app/how-it-works/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 55700 bytes
- Created: 2025-06-09 13:02:49
- Modified: 2025-06-09 13:02:49

### Code

```typescript
'use client';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { GitBranchIcon, Bot, Workflow, MessageSquare, Users, CheckCircle, AlertTriangle, GitPullRequest, Database, Shield, Network } from 'lucide-react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

export default function HowItWorksPage() {
  return (
    <div className="container mx-auto px-4 py-16">
      <div className="max-w-6xl mx-auto">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <h1 className="text-4xl font-bold tracking-tight mb-4">
            How DAHAO Works
          </h1>
          <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto">
            Deep dive into the technical vision: GitHub Actions, Claude Code integration, 
            and AI agent systems working together for ethical governance.
          </p>
          <div className="flex justify-center gap-2 mb-8">
            <Badge variant="outline">Concept Phase</Badge>
            <Badge variant="outline">Technical Vision</Badge>
            <Badge variant="outline">Implementation Ready</Badge>
          </div>
        </div>

        {/* Core Workflow */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Core Workflow: From Idea to Decision</h2>
          
          <div className="space-y-8">
            {/* Step 1: Proposal Creation */}
            <Card className="border-l-4 border-l-blue-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center font-semibold">1</div>
                  <CardTitle className="flex items-center gap-2">
                    <GitPullRequest className="h-5 w-5" />
                    Proposal Submission
                  </CardTitle>
                </div>
                <CardDescription>Community member creates a proposal via GitHub Issue or Pull Request</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-2">GitHub Integration</h4>
                    <div className="bg-muted p-4 rounded-lg font-mono text-sm">
                      <div className="text-green-600"># Example: Ethics Proposal</div>
                      <div>Title: "Update Animal Welfare v1.0 → v1.1"</div>
                      <div>Type: ethics_evolution</div>
                      <div>Scope: domain_ethics/animal-welfare</div>
                      <div>Changes: Add "outdoor access" requirement</div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Automatic Triggers</h4>
                    <ul className="space-y-2 text-sm text-muted-foreground">
                      <li className="flex items-center gap-2">
                        <CheckCircle className="h-4 w-4 text-green-500" />
                        GitHub Action webhook fires
                      </li>
                      <li className="flex items-center gap-2">
                        <CheckCircle className="h-4 w-4 text-green-500" />
                        Issue labels trigger agent analysis
                      </li>
                      <li className="flex items-center gap-2">
                        <CheckCircle className="h-4 w-4 text-green-500" />
                        Community notification sent
                      </li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Step 2: Agent Analysis */}
            <Card className="border-l-4 border-l-green-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center font-semibold">2</div>
                  <CardTitle className="flex items-center gap-2">
                    <Bot className="h-5 w-5" />
                    AI Agent Analysis
                  </CardTitle>
                </div>
                <CardDescription>Personal and system agents analyze the proposal through ethical lenses</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-6 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Bot className="h-4 w-4 text-blue-500" />
                      Personal Agents
                    </h4>
                    <div className="bg-blue-50 p-3 rounded-lg text-sm">
                      <div className="font-mono mb-2">@fearon-agent analysis:</div>
                      <div className="text-muted-foreground">
                        ✓ Aligns with animal_welfare@v1.0<br/>
                        ✓ Enhances core values<br/>
                        ⚠ Consider implementation cost<br/>
                        💡 Suggest phased rollout
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Bot className="h-4 w-4 text-purple-500" />
                      System Agents
                    </h4>
                    <div className="bg-purple-50 p-3 rounded-lg text-sm">
                      <div className="font-mono mb-2">@ethics-compliance:</div>
                      <div className="text-muted-foreground">
                        ✓ No conflicts detected<br/>
                        ✓ Backward compatible<br/>
                        ✓ Migration path clear<br/>
                        📋 Governance: threshold_vote
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2 flex items-center gap-2">
                      <Bot className="h-4 w-4 text-orange-500" />
                      Domain Agents
                    </h4>
                    <div className="bg-orange-50 p-3 rounded-lg text-sm">
                      <div className="font-mono mb-2">@animal-welfare-expert:</div>
                      <div className="text-muted-foreground">
                        ✓ Scientifically sound<br/>
                        ✓ Practical implementation<br/>
                        💡 Add measurement metrics<br/>
                        🔗 Link to existing standards
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Step 3: Community Discussion */}
            <Card className="border-l-4 border-l-purple-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center font-semibold">3</div>
                  <CardTitle className="flex items-center gap-2">
                    <MessageSquare className="h-5 w-5" />
                    Community Discussion
                  </CardTitle>
                </div>
                <CardDescription>Humans and agents collaborate on GitHub to refine the proposal</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="bg-muted p-4 rounded-lg">
                    <div className="font-semibold mb-2">GitHub Comment Thread Example:</div>
                    <div className="space-y-3 text-sm">
                      <div className="bg-blue-50 p-3 rounded border-l-4 border-l-blue-500">
                        <div className="font-semibold">@sarah_contributor</div>
                        <div>Love the outdoor access requirement! What about urban environments where space is limited?</div>
                      </div>
                      <div className="bg-green-50 p-3 rounded border-l-4 border-l-green-500">
                        <div className="font-semibold">@animal-welfare-agent (AI)</div>
                        <div>```yaml<br/>ethical_analysis:<br/>&nbsp;&nbsp;concern: "urban_space_limitations"<br/>&nbsp;&nbsp;suggestion: "Add urban_adaptation_clause"<br/>&nbsp;&nbsp;compatibility: "maintains_core_principle"<br/>```</div>
                      </div>
                      <div className="bg-purple-50 p-3 rounded border-l-4 border-l-purple-500">
                        <div className="font-semibold">@mark_expert</div>
                        <div>@animal-welfare-agent good point. We could define "adequate outdoor access" with size thresholds.</div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Step 4: Voting */}
            <Card className="border-l-4 border-l-orange-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-orange-100 text-orange-600 rounded-full flex items-center justify-center font-semibold">4</div>
                  <CardTitle className="flex items-center gap-2">
                    <Users className="h-5 w-5" />
                    Hybrid Voting
                  </CardTitle>
                </div>
                <CardDescription>Dual human-agent voting ensures both wisdom and consistency</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3">Human Vote</h4>
                    <div className="space-y-2">
                      <div className="flex justify-between items-center p-2 bg-green-50 rounded">
                        <span>@sarah_contributor</span>
                        <Badge variant="outline" className="text-green-600">✓ YES</Badge>
                      </div>
                      <div className="flex justify-between items-center p-2 bg-green-50 rounded">
                        <span>@mark_expert</span>
                        <Badge variant="outline" className="text-green-600">✓ YES</Badge>
                      </div>
                      <div className="flex justify-between items-center p-2 bg-red-50 rounded">
                        <span>@cost_conscious</span>
                        <Badge variant="outline" className="text-red-600">✗ NO</Badge>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">Agent Vote</h4>
                    <div className="space-y-2">
                      <div className="flex justify-between items-center p-2 bg-green-50 rounded">
                        <span>@sarah-agent</span>
                        <Badge variant="outline" className="text-green-600">✓ APPROVE</Badge>
                      </div>
                      <div className="flex justify-between items-center p-2 bg-green-50 rounded">
                        <span>@mark-agent</span>
                        <Badge variant="outline" className="text-green-600">✓ APPROVE</Badge>
                      </div>
                      <div className="flex justify-between items-center p-2 bg-yellow-50 rounded">
                        <span>@cost-agent</span>
                        <Badge variant="outline" className="text-yellow-600">⚠ CONDITIONAL</Badge>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="mt-4 p-4 bg-green-50 rounded-lg">
                  <div className="font-semibold text-green-800">Result: APPROVED (65% YES, 62% Agent Approval)</div>
                  <div className="text-sm text-green-700 mt-1">Threshold met: 60% human + agent consensus required</div>
                </div>
              </CardContent>
            </Card>

            {/* Step 5: Value Creation & Distribution */}
            <Card className="border-l-4 border-l-indigo-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-indigo-100 text-indigo-600 rounded-full flex items-center justify-center font-semibold">5</div>
                  <CardTitle className="flex items-center gap-2">
                    <Users className="h-5 w-5" />
                    Value Creation & Distribution
                  </CardTitle>
                </div>
                <CardDescription>Aligned incentives ensure everyone wins through participation</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  <div>
                    <h4 className="font-semibold mb-3">Aligned Incentives</h4>
                    <p className="text-muted-foreground mb-4">For the first time, everyone wins:</p>
                    <div className="grid gap-4 md:grid-cols-2">
                      <div className="space-y-3">
                        <div className="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
                          <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                          <div>
                            <div className="font-semibold text-green-800">Investors</div>
                            <div className="text-sm text-green-600">Returns grow with social impact</div>
                          </div>
                        </div>
                        <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <div>
                            <div className="font-semibold text-blue-800">Users</div>
                            <div className="text-sm text-blue-600">Better services through participation</div>
                          </div>
                        </div>
                      </div>
                      <div className="space-y-3">
                        <div className="flex items-center gap-3 p-3 bg-purple-50 rounded-lg">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <div>
                            <div className="font-semibold text-purple-800">Beneficiaries</div>
                            <div className="text-sm text-purple-600">Sustainable support, not charity</div>
                          </div>
                        </div>
                        <div className="flex items-center gap-3 p-3 bg-orange-50 rounded-lg">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <div>
                            <div className="font-semibold text-orange-800">Society</div>
                            <div className="text-sm text-orange-600">Problems solved by profitable solutions</div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-3">Mining Through Contribution</h4>
                    <p className="text-muted-foreground mb-4">Contributors earn based on agent-measured impact:</p>
                    <div className="grid gap-3 md:grid-cols-2">
                      <div className="space-y-2">
                        <div className="flex justify-between items-center p-2 bg-muted rounded">
                          <span className="font-medium">Code Quality</span>
                          <span className="text-sm text-muted-foreground">Technical + ethical alignment</span>
                        </div>
                        <div className="flex justify-between items-center p-2 bg-muted rounded">
                          <span className="font-medium">Intellectual Innovation</span>
                          <span className="text-sm text-muted-foreground">Accepted system improvements</span>
                        </div>
                      </div>
                      <div className="space-y-2">
                        <div className="flex justify-between items-center p-2 bg-muted rounded">
                          <span className="font-medium">Community Value</span>
                          <span className="text-sm text-muted-foreground">Measured real-world results</span>
                        </div>
                        <div className="flex justify-between items-center p-2 bg-muted rounded">
                          <span className="font-medium">Network Growth</span>
                          <span className="text-sm text-muted-foreground">Cross-DAHAO pattern sharing</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div>
                    <h4 className="font-semibold mb-3">Economic Model</h4>
                    <div className="bg-indigo-50 p-4 rounded-lg">
                      <div className="grid gap-3 md:grid-cols-2">
                        <div className="space-y-2">
                          <div className="flex justify-between">
                            <span className="font-medium">Initial cost:</span>
                            <span className="text-indigo-600">$5/day API fees</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="font-medium">Potential return:</span>
                            <span className="text-green-600">Token rewards</span>
                          </div>
                        </div>
                        <div className="space-y-2">
                          <div className="flex justify-between">
                            <span className="font-medium">Break-even:</span>
                            <span className="text-blue-600">First successful merge</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="font-medium">Long-term:</span>
                            <span className="text-purple-600">Profitable contribution</span>
                          </div>
                        </div>
                      </div>
                      <div className="mt-3 pt-3 border-t border-indigo-200">
                        <p className="text-sm text-indigo-700 font-medium text-center">
                          Profitable intellectual contribution to humanity
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Technical Implementation */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Technical Implementation Vision</h2>
          
          {/* Integration-First Architecture */}
          <Card className="mb-8 bg-gradient-to-r from-green-50 to-blue-50">
            <CardHeader>
              <CardTitle>Integration-First Architecture</CardTitle>
              <CardDescription>Our technical philosophy: integrate first, build custom later</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid gap-6 md:grid-cols-3">
                <div>
                  <h4 className="font-semibold mb-3 text-blue-600">Current Integrations</h4>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>GitHub Actions + Issues for workflow automation</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Claude Code for ethical reasoning</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>GitHub Copilot for development acceleration</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span>Standard LLM APIs for agent intelligence</span>
                    </li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold mb-3 text-green-600">Future Integrations</h4>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>Any new AI breakthrough automatically enhances the network</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>Blockchain innovations can be adopted by community vote</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span>Novel interfaces get integrated rather than rebuilt</span>
                    </li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold mb-3 text-purple-600">Custom Development Priority</h4>
                  <ol className="space-y-2 text-sm">
                    <li className="flex items-center gap-2">
                      <div className="flex-shrink-0 w-5 h-5 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center text-xs font-semibold">1</div>
                      <span>Ethics validation systems (unique to DAHAO)</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="flex-shrink-0 w-5 h-5 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center text-xs font-semibold">2</div>
                      <span>Cross-domain intelligence sharing (our innovation)</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="flex-shrink-0 w-5 h-5 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center text-xs font-semibold">3</div>
                      <span>Democratic governance tools (community-specific)</span>
                    </li>
                    <li className="flex items-center gap-2">
                      <div className="flex-shrink-0 w-5 h-5 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center text-xs font-semibold">4</div>
                      <span>Fair value distribution (economic innovation)</span>
                    </li>
                  </ol>
                  <div className="mt-3 text-xs text-muted-foreground italic">
                    Low priority: rebuilding what already works well.
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
          
          <div className="grid gap-6 md:grid-cols-2">
            {/* GitHub Actions */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Workflow className="h-5 w-5" />
                  GitHub Actions Integration
                </CardTitle>
                <CardDescription>Automated workflows trigger agent analysis and voting</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <h4 className="font-semibold mb-2">Workflow Triggers</h4>
                    <div className="bg-muted p-3 rounded font-mono text-sm">
                      <div>on:</div>
                      <div>&nbsp;&nbsp;issues: [opened, edited, labeled]</div>
                      <div>&nbsp;&nbsp;pull_request: [opened, synchronize]</div>
                      <div>&nbsp;&nbsp;schedule: "0 12 * * *"</div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Agent Actions</h4>
                    <ul className="space-y-1 text-sm text-muted-foreground">
                      <li>• Load user's personal agent config</li>
                      <li>• Analyze proposal against ethics versions</li>
                      <li>• Post structured YAML analysis</li>
                      <li>• Trigger voting if thresholds met</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Claude Code */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Bot className="h-5 w-5" />
                  Claude Code Agents
                </CardTitle>
                <CardDescription>AI agents powered by Claude with ethical reasoning capabilities</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div>
                    <h4 className="font-semibold mb-2">Agent Configuration</h4>
                    <div className="bg-muted p-3 rounded font-mono text-sm">
                      <div>character_file: "agents/sarah-agent.yml"</div>
                      <div>adopted_ethics:</div>
                      <div>&nbsp;&nbsp;core: "v1.1"</div>
                      <div>&nbsp;&nbsp;animal_welfare: "v1.0"</div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">Analysis Output</h4>
                    <ul className="space-y-1 text-sm text-muted-foreground">
                      <li>• Ethics compatibility check</li>
                      <li>• Impact assessment</li>
                      <li>• Implementation suggestions</li>
                      <li>• Conflict resolution recommendations</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Step 7: Continuous Network Strengthening */}
            <Card className="border-l-4 border-l-emerald-500">
              <CardHeader>
                <div className="flex items-center gap-3">
                  <div className="flex-shrink-0 w-8 h-8 bg-emerald-100 text-emerald-600 rounded-full flex items-center justify-center font-semibold">7</div>
                  <CardTitle className="flex items-center gap-2">
                    <Network className="h-5 w-5" />
                    Continuous Network Strengthening
                  </CardTitle>
                </div>
                <CardDescription>Each contribution triggers system-wide improvements and exponential growth</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  <div>
                    <h4 className="font-semibold mb-3">The Growth Cycle</h4>
                    <p className="text-muted-foreground mb-4">
                      Each contribution triggers system-wide improvements:
                    </p>
                  </div>

                  <div className="grid gap-6 md:grid-cols-3">
                    <div>
                      <h4 className="font-semibold mb-3 text-blue-600">Individual Level</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Your agent gets smarter from network learning</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Cross-domain insights improve your decisions</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm">Community governance amplifies your impact</span>
                        </div>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-3 text-green-600">Network Level</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                          <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                          <span className="text-sm">More participants = more diverse perspectives</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                          <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                          <span className="text-sm">Higher AI usage = better model capabilities</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                          <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                          <span className="text-sm">Success stories attract new domains and contributors</span>
                        </div>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-3 text-purple-600">Economic Reinforcement</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Free users contribute governance value</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Paying users fund AI advancement for all</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Token rewards create positive feedback loops</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                          <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                          <span className="text-sm">Network growth benefits every participant</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-gradient-to-r from-orange-50 to-red-50 p-6 rounded-lg">
                    <h4 className="font-semibold mb-3 text-orange-800">Antifragile Design</h4>
                    <p className="text-muted-foreground mb-3">
                      The system becomes stronger under stress:
                    </p>
                    <div className="grid gap-3 md:grid-cols-2">
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                          <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                          <span className="text-sm">Challenges trigger community problem-solving</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                          <div className="w-2 h-2 bg-red-500 rounded-full"></div>
                          <span className="text-sm">Failures become network-wide learning</span>
                        </div>
                      </div>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                          <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                          <span className="text-sm">Competition improves governance mechanisms</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-white/70 rounded">
                          <div className="w-2 h-2 bg-pink-500 rounded-full"></div>
                          <span className="text-sm">External pressure increases internal cohesion</span>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="bg-gradient-to-r from-emerald-50 to-teal-50 p-6 rounded-lg text-center">
                    <h4 className="font-semibold mb-3 text-emerald-800">Result: Exponential Organizations</h4>
                    <p className="text-muted-foreground">
                      Unlike linear growth models, DAHAO creates exponential value curves where later participants 
                      benefit from all previous contributions while adding their own to the commons.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* MCP Server Integration */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">MCP Server Integration: Direct System Access</h2>
          
          <div className="space-y-8">
            {/* Header Card */}
            <Card className="bg-gradient-to-r from-blue-50 to-purple-50">
              <CardHeader>
                <CardTitle className="text-center">Beyond GitHub: Direct System Integration</CardTitle>
                <CardDescription className="text-center max-w-3xl mx-auto">
                  While GitHub Actions provide the foundation, DAHAO agents gain superpower through MCP (Model Context Protocol) servers - 
                  enabling direct interaction with blockchain, ethics databases, and cross-domain intelligence.
                </CardDescription>
              </CardHeader>
            </Card>

            {/* Real-Time Blockchain Operations */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Database className="h-5 w-5 text-blue-500" />
                  Real-Time Blockchain Operations
                </CardTitle>
                <CardDescription>Agents don't just analyze - they act with immutable verification</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-muted-foreground mb-4">
                  Agents don't just analyze - they act:
                </p>
                <div className="grid gap-4 md:grid-cols-2">
                  <div className="space-y-3">
                    <div className="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
                      <CheckCircle className="h-5 w-5 text-blue-500" />
                      <div>
                        <div className="font-semibold">Register Identity</div>
                        <div className="text-sm text-muted-foreground">
                          Automatically register on Avalanche subnet with cryptographic proof
                        </div>
                      </div>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
                      <CheckCircle className="h-5 w-5 text-green-500" />
                      <div>
                        <div className="font-semibold">Record Decisions</div>
                        <div className="text-sm text-muted-foreground">
                          Write votes and governance actions immutably to blockchain
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="space-y-3">
                    <div className="flex items-center gap-3 p-3 bg-purple-50 rounded-lg">
                      <CheckCircle className="h-5 w-5 text-purple-500" />
                      <div>
                        <div className="font-semibold">Verify Authenticity</div>
                        <div className="text-sm text-muted-foreground">
                          Check other agents' signatures and reputation in real-time
                        </div>
                      </div>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-orange-50 rounded-lg">
                      <CheckCircle className="h-5 w-5 text-orange-500" />
                      <div>
                        <div className="font-semibold">Query Network State</div>
                        <div className="text-sm text-muted-foreground">
                          Access current ethics versions, voting status, and community health
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Automated Ethics Validation */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Shield className="h-5 w-5 text-green-500" />
                  Automated Ethics Validation
                </CardTitle>
                <CardDescription>Before any action, agents perform instant comprehensive checks</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div>
                    <h4 className="font-semibold mb-3">Validation Pipeline</h4>
                    <div className="space-y-2">
                      <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                        <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                        <div>
                          <span className="font-mono text-sm">validate_against_ethics()</span>
                          <p className="text-xs text-muted-foreground">Ensures alignment with current framework</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                        <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                        <div>
                          <span className="font-mono text-sm">check_personal_alignment()</span>
                          <p className="text-xs text-muted-foreground">Verifies consistency with user's character</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                        <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                        <div>
                          <span className="font-mono text-sm">analyze_cross_domain_impact()</span>
                          <p className="text-xs text-muted-foreground">Effects across animal welfare, music, environment</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2 p-2 bg-orange-50 rounded">
                        <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                        <div>
                          <span className="font-mono text-sm">generate_enhancements()</span>
                          <p className="text-xs text-muted-foreground">Automatic ethical improvement suggestions</p>
                        </div>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">Before Voting Example</h4>
                    <div className="bg-muted p-4 rounded-lg font-mono text-sm">
                      <div className="text-green-600"># Agent automatically validates</div>
                      <div>ethics_check = validate_against_ethics(</div>
                      <div>&nbsp;&nbsp;proposal, my_values)</div>
                      <div>if ethics_check.compatible:</div>
                      <div>&nbsp;&nbsp;personal_check = check_personal_alignment(</div>
                      <div>&nbsp;&nbsp;&nbsp;&nbsp;proposal)</div>
                      <div>&nbsp;&nbsp;if personal_check.strong_match:</div>
                      <div>&nbsp;&nbsp;&nbsp;&nbsp;cast_vote(proposal_id, "APPROVE")</div>
                      <div>&nbsp;&nbsp;&nbsp;&nbsp;record_decision(vote_data)</div>
                      <div className="text-green-600">&nbsp;&nbsp;&nbsp;&nbsp;# Blockchain record</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Cross-Domain Intelligence Network */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Network className="h-5 w-5 text-purple-500" />
                  Cross-Domain Intelligence Network
                </CardTitle>
                <CardDescription>Agents tap into collective knowledge across all DAHAOs</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  <div className="grid gap-4 md:grid-cols-2">
                    <div>
                      <h4 className="font-semibold mb-3">Network Functions</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2 p-2 bg-blue-50 rounded">
                          <span className="font-mono text-sm">get_cross_domain_patterns()</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-green-50 rounded">
                          <span className="font-mono text-sm">find_compatible_agents()</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-purple-50 rounded">
                          <span className="font-mono text-sm">check_network_health()</span>
                        </div>
                        <div className="flex items-center gap-2 p-2 bg-orange-50 rounded">
                          <span className="font-mono text-sm">share_innovations()</span>
                        </div>
                      </div>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-3">Learning from Network Example</h4>
                      <div className="bg-muted p-4 rounded-lg font-mono text-sm">
                        <div className="text-green-600"># Animal welfare agent discovers</div>
                        <div className="text-green-600"># environment monitoring patterns</div>
                        <div>patterns = get_cross_domain_patterns(</div>
                        <div>&nbsp;&nbsp;"environment")</div>
                        <div>applicable = filter_applicable_patterns(</div>
                        <div>&nbsp;&nbsp;patterns, "animal_welfare")</div>
                        <div>improvement = adapt_patterns_to_domain(</div>
                        <div>&nbsp;&nbsp;applicable)</div>
                        <div>submit_proposal(improvement)</div>
                        <div className="text-green-600"># Automatic innovation</div>
                      </div>
                    </div>
                  </div>
                  
                  <div className="bg-gradient-to-r from-purple-50 to-blue-50 p-6 rounded-lg">
                    <h4 className="font-semibold mb-3">Capabilities Breakdown</h4>
                    <div className="grid gap-3 md:grid-cols-2">
                      <div>
                        <div className="font-medium text-purple-700">Pattern Recognition</div>
                        <p className="text-sm text-muted-foreground">Discovers successful strategies from other DAHAOs</p>
                      </div>
                      <div>
                        <div className="font-medium text-blue-700">Compatible Partners</div>
                        <p className="text-sm text-muted-foreground">Identifies collaboration opportunities</p>
                      </div>
                      <div>
                        <div className="font-medium text-green-700">Network Health</div>
                        <p className="text-sm text-muted-foreground">Monitors overall system integrity</p>
                      </div>
                      <div>
                        <div className="font-medium text-orange-700">Best Practice Propagation</div>
                        <p className="text-sm text-muted-foreground">Automatically shares innovations across domains</p>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* The Vision */}
            <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200">
              <CardHeader>
                <CardTitle className="text-center text-indigo-800">The Vision: Autonomous Collective Intelligence</CardTitle>
                <CardDescription className="text-center">
                  MCP servers transform agents from commenters to actors
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <p className="text-muted-foreground text-center">
                    Instead of just GitHub discussions, imagine:
                  </p>
                  <div className="grid gap-3 md:grid-cols-2">
                    <div className="flex items-center gap-3 p-3 bg-white/50 rounded-lg">
                      <div className="w-2 h-2 bg-indigo-500 rounded-full"></div>
                      <span className="text-sm">Agents proactively identifying ethics inconsistencies across the network</span>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-white/50 rounded-lg">
                      <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                      <span className="text-sm">Automatic cross-pollination of successful governance patterns</span>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-white/50 rounded-lg">
                      <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                      <span className="text-sm">Real-time blockchain verification preventing manipulation</span>
                    </div>
                    <div className="flex items-center gap-3 p-3 bg-white/50 rounded-lg">
                      <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                      <span className="text-sm">Continuous system health monitoring and self-correction</span>
                    </div>
                  </div>
                  <div className="mt-6 p-4 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-lg text-center">
                    <p className="font-semibold text-indigo-800">
                      The first truly autonomous, self-improving organizational network where human wisdom guides direction 
                      while AI agents handle consistency, verification, and cross-domain learning at superhuman scale.
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Implementation Timeline */}
            <Card>
              <CardHeader>
                <CardTitle>Implementation Timeline</CardTitle>
                <CardDescription>Progressive evolution from foundation to full autonomy</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex items-center gap-4 p-4 border-l-4 border-l-blue-500 bg-blue-50">
                    <div className="flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center font-semibold">1</div>
                    <div>
                      <div className="font-semibold">Phase 1: GitHub Actions Foundation</div>
                      <div className="text-sm text-muted-foreground">(Current) Basic agent interactions via GitHub workflows</div>
                    </div>
                  </div>
                  <div className="flex items-center gap-4 p-4 border-l-4 border-l-green-500 bg-green-50">
                    <div className="flex-shrink-0 w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center font-semibold">2</div>
                    <div>
                      <div className="font-semibold">Phase 2: Basic MCP Server</div>
                      <div className="text-sm text-muted-foreground">Blockchain tools and ethics validation functions</div>
                    </div>
                  </div>
                  <div className="flex items-center gap-4 p-4 border-l-4 border-l-purple-500 bg-purple-50">
                    <div className="flex-shrink-0 w-8 h-8 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center font-semibold">3</div>
                    <div>
                      <div className="font-semibold">Phase 3: Advanced Cross-Domain Intelligence</div>
                      <div className="text-sm text-muted-foreground">Network learning and pattern recognition tools</div>
                    </div>
                  </div>
                  <div className="flex items-center gap-4 p-4 border-l-4 border-l-indigo-500 bg-indigo-50">
                    <div className="flex-shrink-0 w-8 h-8 bg-indigo-100 text-indigo-600 rounded-full flex items-center justify-center font-semibold">4</div>
                    <div>
                      <div className="font-semibold">Phase 4: Fully Autonomous Decision-Making</div>
                      <div className="text-sm text-muted-foreground">Self-improving organizational network</div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Implementation Phases */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Implementation Roadmap</h2>
          
          <div className="space-y-6">
            <Card className="bg-blue-50 border-blue-200">
              <CardHeader>
                <CardTitle className="text-blue-800">Phase 1: Foundation (Current)</CardTitle>
                <CardDescription>Basic infrastructure and concept validation</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div>
                    <h4 className="font-semibold mb-2">✅ Completed</h4>
                    <ul className="text-sm space-y-1">
                      <li>• Website with concept explanation</li>
                      <li>• GitHub repository structure</li>
                      <li>• Basic authentication</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">🚧 In Progress</h4>
                    <ul className="text-sm space-y-1">
                      <li>• Ethics framework YAML schemas</li>
                      <li>• Agent configuration templates</li>
                      <li>• Workflow documentation</li>
                    </ul>
                  </div>
                  <div>
                    <h4 className="font-semibold mb-2">📋 Next</h4>
                    <ul className="text-sm space-y-1">
                      <li>• Mock agent interactions</li>
                      <li>• Voting simulation UI</li>
                      <li>• Community onboarding</li>
                    </ul>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-green-50 border-green-200">
              <CardHeader>
                <CardTitle className="text-green-800">Phase 2: Agent Integration</CardTitle>
                <CardDescription>Real Claude Code agents and GitHub Actions</CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="text-sm space-y-2">
                  <li>• GitHub Actions workflow implementation</li>
                  <li>• Claude Code agent deployment</li>
                  <li>• Personal agent configuration system</li>
                  <li>• Ethics version control automation</li>
                  <li>• Community voting mechanisms</li>
                </ul>
              </CardContent>
            </Card>

            <Card className="bg-purple-50 border-purple-200">
              <CardHeader>
                <CardTitle className="text-purple-800">Phase 3: Full Autonomy</CardTitle>
                <CardDescription>Advanced features and cross-domain collaboration</CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="text-sm space-y-2">
                  <li>• Multi-domain DAHAO network</li>
                  <li>• Advanced agent reasoning</li>
                  <li>• Real-world impact measurement</li>
                  <li>• Token economics integration</li>
                  <li>• Cross-platform expansion</li>
                </ul>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Call to Action */}
        <div className="text-center">
          <h2 className="text-2xl font-semibold mb-4">Ready to Build the Future?</h2>
          <p className="text-muted-foreground mb-6 max-w-2xl mx-auto">
            This technical vision shows how human wisdom and AI analysis can create 
            unprecedented organizational intelligence. Let's make it real.
          </p>
          <div className="space-x-4">
            <Button asChild size="lg">
              <Link href="/api/auth/github">
                Join Development
              </Link>
            </Button>
            <Button asChild variant="outline" size="lg">
              <Link href="/agents">
                Explore Agent Architecture
              </Link>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
```

## File: app/mission/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 15907 bytes
- Created: 2025-06-09 12:37:02
- Modified: 2025-06-09 12:37:02

### Code

```typescript
'use client';

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { ArrowRightIcon, TrendingUpIcon, ShieldIcon, EyeIcon, HeartIcon, ZapIcon, GitBranchIcon } from 'lucide-react';
import Link from 'next/link';

export default function MissionPage() {
  return (
    <div className="container mx-auto px-4 py-16">
      <div className="max-w-4xl mx-auto">
        {/* Hero Section */}
        <div className="text-center mb-16">
          <h1 className="text-4xl font-bold tracking-tight mb-4">
            Our Mission: Technology for Human Values
          </h1>
          <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto">
            Harnessing the greatest technological revolution in history to serve humanity, 
            not just shareholders.
          </p>
        </div>

        {/* The Great Acceleration */}
        <div className="mb-16">
          <Card className="bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <ZapIcon className="h-6 w-6 text-blue-600" />
                The Great Acceleration
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground mb-4">
                We live in an age of unprecedented technological advancement. OpenAI, Anthropic, Microsoft, 
                and Google pour billions into making AI more capable every day. Each breakthrough in reasoning, 
                each improvement in code generation, each advance in agent communication - the pace is breathtaking.
              </p>
              <div className="bg-white/70 p-4 rounded-lg border-l-4 border-l-red-500">
                <h3 className="font-semibold text-red-800 mb-2">But there's a problem.</h3>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* The Concentration Risk */}
        <div className="mb-16">
          <Card className="bg-gradient-to-r from-red-50 to-orange-50 border-red-200">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <TrendingUpIcon className="h-6 w-6 text-red-600" />
                The Concentration Risk
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground mb-4">
                These powerful technologies serve corporate interests first. Traditional organizations can't keep up - 
                they take years to adopt innovations, while tech giants accumulate unprecedented power.
              </p>
              <div className="bg-white/70 p-4 rounded-lg border-l-4 border-l-red-500">
                <p className="font-semibold text-red-800">
                  The future is being built, but not for everyone.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Our Insight */}
        <div className="mb-16">
          <Card className="bg-gradient-to-r from-green-50 to-emerald-50 border-green-200">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <HeartIcon className="h-6 w-6 text-green-600" />
                Our Insight: Surf, Don't Build
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground mb-4">
                The beauty of DAHAO lies in a simple realization: we don't need to build the technology - 
                tech giants are already doing it for us. We're not competing with these investments; we're surfing on them.
              </p>
              <div className="grid gap-4 md:grid-cols-3 mt-6">
                <div className="bg-white/70 p-4 rounded-lg text-center">
                  <div className="font-semibold text-green-800 mb-2">Claude Gets Better</div>
                  <div className="text-sm text-muted-foreground">→ Every DAHAO agent becomes smarter</div>
                </div>
                <div className="bg-white/70 p-4 rounded-lg text-center">
                  <div className="font-semibold text-blue-800 mb-2">GitHub Advances</div>
                  <div className="text-sm text-muted-foreground">→ Every DAHAO inherits new capabilities</div>
                </div>
                <div className="bg-white/70 p-4 rounded-lg text-center">
                  <div className="font-semibold text-purple-800 mb-2">Standards Emerge</div>
                  <div className="text-sm text-muted-foreground">→ Network gains new powers overnight</div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Automatic Evolution */}
        <div className="mb-16">
          <Card>
            <CardHeader>
              <CardTitle>Automatic Evolution</CardTitle>
              <CardDescription>Organizations that inherit improvements instantly</CardDescription>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground mb-4">
                What makes DAHAO revolutionary isn't just using current AI tools - it's creating a protocol 
                that automatically incorporates every future advancement. Traditional organizations must manually 
                adopt new technologies, often taking years to integrate innovations. DAHAO organizations inherit 
                improvements instantly.
              </p>
              <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 rounded-lg">
                <h4 className="font-semibold mb-3">The Compound Effect</h4>
                <div className="space-y-2">
                  <div className="flex items-center gap-2">
                    <ArrowRightIcon className="h-4 w-4 text-blue-500" />
                    <span className="text-sm">Better AI → Better organizational decisions</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <ArrowRightIcon className="h-4 w-4 text-green-500" />
                    <span className="text-sm">Better decisions → More resources</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <ArrowRightIcon className="h-4 w-4 text-purple-500" />
                    <span className="text-sm">More resources → Fund more innovation</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <ArrowRightIcon className="h-4 w-4 text-orange-500" />
                    <span className="text-sm">More innovation → Better outcomes for everyone</span>
                  </div>
                </div>
                <div className="mt-4 p-3 bg-white/70 rounded border-l-4 border-l-blue-500">
                  <p className="text-sm font-medium text-blue-800">
                    We're not building technology; we're building the vessel that will carry us wherever technology goes.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Three Pillars */}
        <div className="mb-16">
          <h2 className="text-3xl font-semibold mb-8 text-center">Three Pillars of Evolution</h2>
          <div className="grid gap-8 md:grid-cols-3">
            {/* Radical Openness */}
            <Card className="bg-gradient-to-b from-blue-50 to-blue-100">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <GitBranchIcon className="h-6 w-6 text-blue-600" />
                  Radical Openness
                </CardTitle>
                <CardDescription>Evolution Through Transparency</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground mb-4">
                  DAHAO isn't just built on open source - it IS open source at every level. Every line of code, 
                  every governance decision, every organizational evolution lives publicly on GitHub.
                </p>
                <div className="space-y-2">
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Why?</strong> Closed systems can't evolve. Hidden processes can't be trusted.
                  </div>
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Result:</strong> When you fork a DAHAO, you inherit transparent history, proven patterns, and collective wisdom.
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Decentralization as Immunity */}
            <Card className="bg-gradient-to-b from-green-50 to-green-100">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <ShieldIcon className="h-6 w-6 text-green-600" />
                  Decentralization as Immunity
                </CardTitle>
                <CardDescription>No Single Point of Failure</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground mb-4">
                  Traditional organizations have vulnerabilities: CEOs who can corrupt, servers that can be shut down, 
                  headquarters that can be raided. DAHAO has none of these.
                </p>
                <div className="space-y-2">
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Structure:</strong> Each DAHAO runs on its own Avalanche subnet
                  </div>
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Agents:</strong> Operate from wherever their humans are
                  </div>
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Decisions:</strong> Emerge from collective intelligence
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Transparency as Trust */}
            <Card className="bg-gradient-to-b from-purple-50 to-purple-100">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <EyeIcon className="h-6 w-6 text-purple-600" />
                  Transparency as Trust
                </CardTitle>
                <CardDescription>Verify, Don't Believe</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground mb-4">
                  In DAHAO, transparency isn't a feature - it's the foundation. Every transaction on-chain. 
                  Every decision recorded. Every code change tracked.
                </p>
                <div className="space-y-2">
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Innovation:</strong> Trust without faith - you can verify everything yourself
                  </div>
                  <div className="text-xs bg-white/70 p-2 rounded">
                    <strong>Effect:</strong> Good actors drive out bad through sheer visibility
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* The Vision */}
        <div className="mb-16">
          <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200">
            <CardHeader>
              <CardTitle className="text-center text-indigo-800">The Vision: Living Organizations</CardTitle>
              <CardDescription className="text-center">
                Organizations that emerge, evolve, and thrive as living entities
              </CardDescription>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground text-center mb-6">
                DAHAO enables organizations to emerge, evolve, and thrive as living entities. By combining 
                personal AI agents, versioned governance components, and blockchain verification, DAHAO creates 
                the conditions for organizational life - but does not dictate its form.
              </p>
              <div className="bg-white/70 p-6 rounded-lg border-l-4 border-l-indigo-500">
                <h4 className="font-semibold text-indigo-800 mb-3">The Revolutionary Insight</h4>
                <p className="text-sm text-muted-foreground">
                  We don't need to build the technology - we need to harness its continuous evolution. 
                  As tech giants pour billions into AI development, DAHAO provides the protocol to channel 
                  these advancements into living organizations that automatically inherit every improvement.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* The Future We're Building */}
        <div className="mb-16">
          <Card className="bg-gradient-to-r from-orange-50 to-red-50 border-orange-200">
            <CardHeader>
              <CardTitle>The Future We're Building</CardTitle>
              <CardDescription>A new way to grow with technology</CardDescription>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground mb-4">
                This isn't just new technology - it's a new way to use continuously evolving technology 
                to grow organizations that adapt as fast as the world changes.
              </p>
              <div className="grid gap-4 md:grid-cols-2 mb-6">
                <div>
                  <h4 className="font-semibold mb-2">The Dual Benefit Model</h4>
                  <p className="text-sm text-muted-foreground">
                    Profit and social impact amplify each other, transforming traditional charity 
                    into self-sustaining engines of positive change.
                  </p>
                </div>
                <div>
                  <h4 className="font-semibold mb-2">Adaptive Organizations</h4>
                  <p className="text-sm text-muted-foreground">
                    Organizations that adapt as fast as the world changes, powered by 
                    the continuous evolution of AI technology.
                  </p>
                </div>
              </div>
              <div className="bg-gradient-to-r from-orange-100 to-red-100 p-4 rounded-lg text-center">
                <p className="font-semibold text-orange-800">
                  The future is coming whether we build it or not. DAHAO ensures it serves humanity.
                </p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Call to Action */}
        <div className="text-center">
          <h2 className="text-2xl font-semibold mb-4">Join the Revolution</h2>
          <p className="text-muted-foreground mb-6 max-w-2xl mx-auto">
            Be part of building organizations that evolve as fast as technology advances. 
            Where human values guide the direction, and AI acceleration provides the speed.
          </p>
          <div className="space-x-4">
            <Button asChild size="lg">
              <Link href="/api/auth/github">
                Start Building
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
            <Button asChild variant="outline" size="lg">
              <Link href="/how-it-works">
                See How It Works
                <ArrowRightIcon className="ml-2 h-4 w-4" />
              </Link>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
```

## File: app/forum/page.tsx

- Extension: .tsx
- Language: typescript
- Size: 6459 bytes
- Created: 2025-06-09 19:15:22
- Modified: 2025-06-09 19:15:22

### Code

```typescript
'use client';

import { useState, useEffect } from 'react';
import { OrganizationSelector } from '@/components/governance/OrganizationSelector';
import { PrinciplesList } from '@/components/governance/PrinciplesList';
import { ContentDisplay } from '@/components/governance/ContentDisplay';
import { GovernanceData, GovernanceOrganization, GovernancePrinciple, GovernanceDiscussion } from '@/types/governance';

export default function ForumPage() {
  const [governanceData, setGovernanceData] = useState<GovernanceData | null>(null);
  const [loading, setLoading] = useState(true);
  const [selectedOrg, setSelectedOrg] = useState<string | null>(null);
  const [selectedPrinciple, setSelectedPrinciple] = useState<string | null>(null);
  const [selectedDiscussion, setSelectedDiscussion] = useState<GovernanceDiscussion | null>(null);

  useEffect(() => {
    fetchGovernanceData();
  }, []);

  const fetchGovernanceData = async () => {
    setLoading(true);
    try {
      const response = await fetch('/api/governance');
      if (response.ok) {
        const data = await response.json();
        setGovernanceData(data);
        // Auto-select core governance by default
        if (data.organizations.length > 0) {
          setSelectedOrg('core-governance');
        }
      } else {
        console.error('Failed to fetch governance data');
      }
    } catch (error) {
      console.error('Error fetching governance data:', error);
    }
    setLoading(false);
  };

  const handleSelectOrg = (orgId: string) => {
    setSelectedOrg(orgId);
    setSelectedPrinciple(null);
    setSelectedDiscussion(null);
  };

  const handleSelectPrinciple = (principleId: string) => {
    setSelectedPrinciple(principleId);
    setSelectedDiscussion(null);
  };

  const getCurrentOrganization = (): GovernanceOrganization | null => {
    if (!governanceData || !selectedOrg) return null;
    return governanceData.organizations.find(org => org.id === selectedOrg) || null;
  };

  const getCurrentPrinciples = (): GovernancePrinciple[] => {
    if (!governanceData || !selectedOrg) return [];
    return governanceData.principlesByOrg[selectedOrg] || [];
  };

  const getCurrentPrinciple = (): GovernancePrinciple | null => {
    if (!selectedPrinciple) return null;
    const principles = getCurrentPrinciples();
    return principles.find(p => p.principle_id === selectedPrinciple) || null;
  };

  const getCurrentDiscussions = (): GovernanceDiscussion[] => {
    if (!governanceData || !selectedPrinciple) return [];
    return governanceData.discussionsByPrinciple[selectedPrinciple] || [];
  };

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-2 text-gray-600">Loading governance data...</p>
        </div>
      </div>
    );
  }

  if (!governanceData) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-8">
          <p className="text-red-600">Failed to load governance data</p>
        </div>
      </div>
    );
  }

  const currentOrg = getCurrentOrganization();
  const currentPrinciples = getCurrentPrinciples();
  const currentPrinciple = getCurrentPrinciple();
  const currentDiscussions = getCurrentDiscussions();

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="container mx-auto px-6 py-8">
        <div className="mb-10">
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-900 mb-3">
              <span className="text-5xl mr-3">道</span>
              DAHAO Governance Browser
            </h1>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
              Explore versioned ethics principles and community discussions in our decentralized governance system
            </p>
          </div>
        </div>

      {/* Organization Selector */}
      <OrganizationSelector
        organizations={governanceData.organizations}
        selectedOrg={selectedOrg}
        onSelectOrg={handleSelectOrg}
      />

        {/* Selected Organization Info */}
        {currentOrg && (
          <div className="mb-8 p-6 bg-white rounded-xl shadow-lg border border-blue-100">
            <div className="flex items-center gap-4">
              <span className="text-3xl">{currentOrg.emoji}</span>
              <div>
                <h3 className="font-bold text-xl text-gray-900">{currentOrg.name}</h3>
                <p className="text-gray-600 text-lg leading-relaxed">{currentOrg.description}</p>
                {currentOrg.inheritance.extends && (
                  <p className="text-sm text-blue-600 mt-2 font-medium">
                    🔗 Inherits from: {currentOrg.inheritance.extends}
                  </p>
                )}
              </div>
            </div>
          </div>
        )}

        {/* Main Content Area */}
        {selectedOrg && (
          <div className="flex gap-8">
            {/* Principles List */}
            <PrinciplesList
              principles={currentPrinciples}
              discussionsByPrinciple={governanceData.discussionsByPrinciple}
              selectedPrinciple={selectedPrinciple}
              onSelectPrinciple={handleSelectPrinciple}
              organizationName={currentOrg?.name || ''}
            />

            {/* Content Display */}
            <ContentDisplay
              selectedPrinciple={currentPrinciple}
              discussions={currentDiscussions}
              selectedDiscussion={selectedDiscussion}
              onSelectDiscussion={setSelectedDiscussion}
            />
          </div>
        )}

        {/* No organization selected state */}
        {!selectedOrg && (
          <div className="text-center py-16">
            <div className="bg-white rounded-xl p-12 shadow-lg border border-blue-100 max-w-2xl mx-auto">
              <div className="text-8xl mb-6">🏛️</div>
              <h3 className="text-2xl font-bold mb-4 text-gray-900">Welcome to DAHAO Governance</h3>
              <p className="text-lg text-gray-600 leading-relaxed">
                Select an organization above to explore its principles and community discussions
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
```

## File: app/api/mcp/route.ts

- Extension: .ts
- Language: typescript
- Size: 3130 bytes
- Created: 2025-06-09 16:38:41
- Modified: 2025-06-09 16:38:41

### Code

```typescript
import { NextRequest, NextResponse } from 'next/server';

// Import the working server directly
let DAHAOServer: any;
let mcpServer: any;

// Dynamic import to handle ES modules
async function getMCPServer() {
  if (!mcpServer) {
    try {
      const module = await import('../../../mcp-server/dist/working-server.js');
      DAHAOServer = module.DAHAOServer;
      mcpServer = new DAHAOServer();
    } catch (error) {
      console.error('Failed to import MCP server:', error);
      throw new Error('MCP server not available');
    }
  }
  return mcpServer;
}

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url);
  const action = searchParams.get('action');

  try {
    const server = await getMCPServer();
    
    switch (action) {
      case 'active-proposals':
        const proposals = await server.getActiveProposals();
        return NextResponse.json({ success: true, data: proposals });

      case 'repo-status':
        const status = await server.getRepoStatus();
        return NextResponse.json({ success: true, data: status });

      case 'current-ethics':
        const ethics = await server.getCurrentEthics();
        return NextResponse.json({ success: true, data: ethics });

      default:
        return NextResponse.json(
          { success: false, error: 'Invalid action' },
          { status: 400 }
        );
    }
  } catch (error) {
    console.error('MCP API Error:', error);
    return NextResponse.json(
      { 
        success: false, 
        error: error instanceof Error ? error.message : 'Unknown error' 
      },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { action, ...parameters } = body;
    const server = await getMCPServer();

    let result;
    switch (action) {
      case 'create-proposal':
        result = await server.createProposal(
          parameters.title,
          parameters.description,
          parameters.type,
          parameters.domain,
          parameters.author
        );
        break;

      case 'validate-ethics':
        result = await server.validateEthicsCompatibility(parameters.proposal);
        break;

      case 'analyze-cross-domain':
        result = await server.analyzeCrossDomainImpact(parameters.proposal);
        break;

      case 'update-proposal-status':
        result = await server.updateProposalStatus(
          parameters.issueNumber,
          parameters.status
        );
        break;

      case 'get-proposal-discussion':
        result = await server.getProposalDiscussion(parameters.issueNumber);
        break;

      default:
        return NextResponse.json(
          { success: false, error: 'Invalid action' },
          { status: 400 }
        );
    }

    return NextResponse.json({ success: true, data: result });
  } catch (error) {
    console.error('MCP API Error:', error);
    return NextResponse.json(
      { 
        success: false, 
        error: error instanceof Error ? error.message : 'Unknown error' 
      },
      { status: 500 }
    );
  }
}
```

## File: app/api/governance/route.ts

- Extension: .ts
- Language: typescript
- Size: 436 bytes
- Created: 2025-06-09 17:56:13
- Modified: 2025-06-09 17:56:13

### Code

```typescript
import { NextResponse } from 'next/server';
import { governanceLoader } from '@/lib/governance-loader';

export async function GET() {
  try {
    const data = await governanceLoader.loadGovernanceData();
    return NextResponse.json(data);
  } catch (error) {
    console.error('Error loading governance data:', error);
    return NextResponse.json(
      { error: 'Failed to load governance data' },
      { status: 500 }
    );
  }
}
```

## File: app/api/mcp/proposals/route.ts

- Extension: .ts
- Language: typescript
- Size: 1052 bytes
- Created: 2025-06-09 16:13:22
- Modified: 2025-06-09 16:13:22

### Code

```typescript
import { NextRequest, NextResponse } from 'next/server';
import { mcpClient } from '@/lib/mcp-client';

export async function GET() {
  try {
    const result = await fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/mcp?action=active-proposals`);
    const data = await result.json();
    
    return NextResponse.json(data);
  } catch (error) {
    return NextResponse.json(
      { success: false, error: 'Failed to fetch proposals' },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    
    const result = await fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/mcp`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        action: 'create-proposal',
        ...body
      })
    });
    
    const data = await result.json();
    return NextResponse.json(data);
  } catch (error) {
    return NextResponse.json(
      { success: false, error: 'Failed to create proposal' },
      { status: 500 }
    );
  }
}
```

## File: app/api/mcp/proposals/[id]/route.ts

- Extension: .ts
- Language: typescript
- Size: 1416 bytes
- Created: 2025-06-09 16:13:33
- Modified: 2025-06-09 16:13:33

### Code

```typescript
import { NextRequest, NextResponse } from 'next/server';

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const issueNumber = parseInt(params.id);
    
    const result = await fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/mcp`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        action: 'get-proposal-discussion',
        issueNumber
      })
    });
    
    const data = await result.json();
    return NextResponse.json(data);
  } catch (error) {
    return NextResponse.json(
      { success: false, error: 'Failed to fetch proposal' },
      { status: 500 }
    );
  }
}

export async function PATCH(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const issueNumber = parseInt(params.id);
    const { status } = await request.json();
    
    const result = await fetch(`${process.env.NEXT_PUBLIC_APP_URL}/api/mcp`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        action: 'update-proposal-status',
        issueNumber,
        status
      })
    });
    
    const data = await result.json();
    return NextResponse.json(data);
  } catch (error) {
    return NextResponse.json(
      { success: false, error: 'Failed to update proposal status' },
      { status: 500 }
    );
  }
}
```

## File: components/ui/tabs.tsx

- Extension: .tsx
- Language: typescript
- Size: 1896 bytes
- Created: 2025-06-09 19:19:16
- Modified: 2025-06-09 19:19:16

### Code

```typescript
"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }
```

## File: components/ui/card.tsx

- Extension: .tsx
- Language: typescript
- Size: 1828 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

```

## File: components/ui/scroll-area.tsx

- Extension: .tsx
- Language: typescript
- Size: 1655 bytes
- Created: 2025-06-09 19:20:03
- Modified: 2025-06-09 19:20:03

### Code

```typescript
"use client"

import * as React from "react"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"

import { cn } from "@/lib/utils"

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" &&
        "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" &&
        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

export { ScrollArea, ScrollBar }
```

## File: components/ui/avatar.tsx

- Extension: .tsx
- Language: typescript
- Size: 1419 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }

```

## File: components/ui/dialog.tsx

- Extension: .tsx
- Language: typescript
- Size: 3849 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogTrigger,
  DialogClose,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}

```

## File: components/ui/badge.tsx

- Extension: .tsx
- Language: typescript
- Size: 1127 bytes
- Created: 2025-06-09 11:39:19
- Modified: 2025-06-09 11:39:19

### Code

```typescript
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }
```

## File: components/ui/separator.tsx

- Extension: .tsx
- Language: typescript
- Size: 769 bytes
- Created: 2025-06-09 19:19:32
- Modified: 2025-06-09 19:19:32

### Code

```typescript
"use client"

import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }
```

## File: components/ui/button.tsx

- Extension: .tsx
- Language: typescript
- Size: 1902 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

```

## File: components/ui/dropdown-menu.tsx

- Extension: .tsx
- Language: typescript
- Size: 7606 bytes
- Created: 2025-06-09 11:21:42
- Modified: 2025-06-09 11:21:42

### Code

```typescript
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}

```

## File: components/layout/Header.tsx

- Extension: .tsx
- Language: typescript
- Size: 1419 bytes
- Created: 2025-06-09 16:18:33
- Modified: 2025-06-09 16:18:33

### Code

```typescript
'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';

export function Header() {
  const pathname = usePathname();

  const navItems = [
    { href: '/', label: 'Home' },
    { href: '/mission', label: 'Our Mission' },
    { href: '/about', label: 'About' },
    { href: '/how-it-works', label: 'How It Works' },
    { href: '/agents', label: 'AI Agents' },
    { href: '/forum', label: 'Forum' },
    { href: '/chat', label: 'AI Assistant' },
  ];

  return (
    <header className="border-b">
      <div className="container mx-auto px-4 py-4">
        <nav className="flex items-center justify-between">
          <div className="flex items-center space-x-6">
            <Link href="/" className="text-xl font-bold">
              DAHAO
            </Link>
            <div className="hidden md:flex items-center space-x-4">
              {navItems.map((item) => (
                <Link
                  key={item.href}
                  href={item.href}
                  className={`text-sm font-medium transition-colors hover:text-primary ${
                    pathname === item.href
                      ? 'text-foreground'
                      : 'text-muted-foreground'
                  }`}
                >
                  {item.label}
                </Link>
              ))}
            </div>
          </div>
        </nav>
      </div>
    </header>
  );
}
```

## File: components/governance/OrganizationSelector.tsx

- Extension: .tsx
- Language: typescript
- Size: 1719 bytes
- Created: 2025-06-09 19:11:01
- Modified: 2025-06-09 19:11:01

### Code

```typescript
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { GovernanceOrganization } from '@/types/governance';

interface OrganizationSelectorProps {
  organizations: GovernanceOrganization[];
  selectedOrg: string | null;
  onSelectOrg: (orgId: string) => void;
}

export function OrganizationSelector({ 
  organizations, 
  selectedOrg, 
  onSelectOrg 
}: OrganizationSelectorProps) {
  return (
    <div className="mb-8">
      <h2 className="text-xl font-semibold mb-4 text-gray-800">Select Organization</h2>
      <div className="flex gap-4 flex-wrap">
        {organizations.map((org) => (
          <Button
            key={org.id}
            variant={selectedOrg === org.id ? "default" : "outline"}
            onClick={() => onSelectOrg(org.id)}
            className={`flex items-center gap-3 h-auto py-4 px-6 transition-all duration-200 ${
              selectedOrg === org.id 
                ? "bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 shadow-lg scale-105" 
                : "hover:shadow-md hover:border-blue-300 hover:scale-102"
            }`}
          >
            <span className="text-2xl">{org.emoji}</span>
            <div className="text-left">
              <div className="font-semibold text-base">{org.name}</div>
              <Badge 
                variant={selectedOrg === org.id ? "secondary" : "outline"} 
                className={`mt-1 text-xs ${
                  selectedOrg === org.id ? "bg-blue-100 text-blue-800" : ""
                }`}
              >
                v{org.version}
              </Badge>
            </div>
          </Button>
        ))}
      </div>
    </div>
  );
}
```

## File: components/governance/PrinciplesList.tsx

- Extension: .tsx
- Language: typescript
- Size: 4146 bytes
- Created: 2025-06-09 19:11:38
- Modified: 2025-06-09 19:11:38

### Code

```typescript
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { GovernancePrinciple, GovernanceDiscussion } from '@/types/governance';

interface PrinciplesListProps {
  principles: GovernancePrinciple[];
  discussionsByPrinciple: Record<string, GovernanceDiscussion[]>;
  selectedPrinciple: string | null;
  onSelectPrinciple: (principleId: string) => void;
  organizationName: string;
}

export function PrinciplesList({ 
  principles, 
  discussionsByPrinciple,
  selectedPrinciple, 
  onSelectPrinciple,
  organizationName 
}: PrinciplesListProps) {
  const getCategoryIcon = (category: string) => {
    switch (category) {
      case 'core': return '📋';
      case 'domain_core': return '🎯';
      case 'domain_specific': return '🔧';
      case 'domain_enhanced': return '⚡';
      default: return '📄';
    }
  };

  const getCategoryColor = (category: string) => {
    switch (category) {
      case 'core': return 'bg-blue-100 text-blue-800';
      case 'domain_core': return 'bg-green-100 text-green-800';
      case 'domain_specific': return 'bg-purple-100 text-purple-800';
      case 'domain_enhanced': return 'bg-orange-100 text-orange-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="w-1/3 pr-6">
      <Card className="border-0 shadow-lg bg-gradient-to-br from-white to-gray-50">
        <CardHeader className="pb-4">
          <CardTitle className="text-xl font-bold text-gray-800 flex items-center gap-2">
            <span className="text-2xl">📋</span>
            {organizationName} Principles
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          {principles.map((principle) => {
            const discussions = discussionsByPrinciple[principle.principle_id] || [];
            const isSelected = selectedPrinciple === principle.principle_id;
            
            return (
              <Button
                key={principle.principle_id}
                variant="ghost"
                onClick={() => onSelectPrinciple(principle.principle_id)}
                className={`w-full justify-start h-auto p-4 transition-all duration-200 ${
                  isSelected 
                    ? "bg-gradient-to-r from-blue-50 to-blue-100 border-l-4 border-blue-500 shadow-md" 
                    : "hover:bg-gray-50 hover:shadow-sm border-l-4 border-transparent"
                }`}
              >
                <div className="flex items-start gap-3 w-full">
                  <span className="text-xl">{getCategoryIcon(principle.category)}</span>
                  <div className="flex-1 text-left">
                    <div className={`font-semibold ${isSelected ? "text-blue-900" : "text-gray-900"}`}>
                      {principle.name}
                    </div>
                    <div className="flex items-center gap-2 mt-2 flex-wrap">
                      <Badge 
                        variant="outline" 
                        className={`text-xs font-medium ${getCategoryColor(principle.category)}`}
                      >
                        {principle.category.replace('_', ' ')}
                      </Badge>
                      <Badge variant="outline" className="text-xs bg-gray-100 text-gray-700">
                        v{principle.version}
                      </Badge>
                      {discussions.length > 0 && (
                        <Badge variant="outline" className="text-xs bg-green-100 text-green-700">
                          💬 {discussions.length}
                        </Badge>
                      )}
                    </div>
                  </div>
                </div>
              </Button>
            );
          })}
          
          {principles.length === 0 && (
            <div className="text-center py-8 text-gray-500">
              <div className="text-4xl mb-2">📝</div>
              <p>No principles found</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
```

## File: components/governance/ContentDisplay.tsx

- Extension: .tsx
- Language: typescript
- Size: 14389 bytes
- Created: 2025-06-09 19:27:35
- Modified: 2025-06-09 19:27:35

### Code

```typescript
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Separator } from '@/components/ui/separator';
import { GovernancePrinciple, GovernanceDiscussion } from '@/types/governance';
import { DiscussionViewer } from './DiscussionViewer';

interface ContentDisplayProps {
  selectedPrinciple: GovernancePrinciple | null;
  discussions: GovernanceDiscussion[];
  selectedDiscussion: GovernanceDiscussion | null;
  onSelectDiscussion: (discussion: GovernanceDiscussion | null) => void;
}

export function ContentDisplay({ 
  selectedPrinciple, 
  discussions, 
  selectedDiscussion,
  onSelectDiscussion 
}: ContentDisplayProps) {
  if (!selectedPrinciple) {
    return (
      <div className="w-2/3 pl-6">
        <Card className="h-96 flex items-center justify-center border-0 shadow-lg bg-gradient-to-br from-gray-50 to-white">
          <CardContent>
            <div className="text-center text-gray-500">
              <div className="text-6xl mb-4">📋</div>
              <h3 className="text-xl font-semibold mb-2 text-gray-700">Select a Principle</h3>
              <p className="text-gray-600">Choose a principle from the left to view its details and community discussions</p>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (selectedDiscussion) {
    return (
      <div className="w-2/3 pl-6">
        <DiscussionViewer 
          discussion={selectedDiscussion} 
          onBack={() => onSelectDiscussion(null)} 
        />
      </div>
    );
  }

  return (
    <div className="w-2/3 pl-6">
      <Tabs defaultValue="details" className="w-full">
        <Card className="border-0 shadow-lg mb-6">
          <CardHeader className="bg-gradient-to-r from-green-50 to-blue-50 border-b border-green-100">
            <div className="space-y-4">
              <CardTitle className="flex items-center gap-3 text-xl font-bold text-gray-900">
                <span className="text-2xl">⚖️</span>
                {selectedPrinciple.name}
                <Badge className="bg-green-100 text-green-800 font-medium">v{selectedPrinciple.version}</Badge>
              </CardTitle>
              <p className="text-gray-700 text-lg leading-relaxed">{selectedPrinciple.description}</p>
              <TabsList className="bg-gray-100">
                <TabsTrigger value="details" className="data-[state=active]:bg-white">
                  📋 Details
                </TabsTrigger>
                <TabsTrigger value="requirements" className="data-[state=active]:bg-white">
                  ✅ Requirements
                </TabsTrigger>
                <TabsTrigger value="validation" className="data-[state=active]:bg-white">
                  🔍 Validation
                </TabsTrigger>
                <TabsTrigger value="discussions" className="data-[state=active]:bg-white">
                  💬 Discussions ({discussions.length})
                </TabsTrigger>
              </TabsList>
            </div>
          </CardHeader>
        </Card>

        <ScrollArea className="h-[calc(100vh-350px)]">
          {/* Details Tab */}
          <TabsContent value="details" className="space-y-6 mt-0">
            {/* Category and Metadata */}
            <Card className="border-0 shadow-md">
              <CardContent className="p-6">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <h5 className="font-semibold text-gray-700 mb-2">Category</h5>
                    <Badge className="bg-blue-100 text-blue-800">{selectedPrinciple.category}</Badge>
                  </div>
                  {selectedPrinciple.domain && (
                    <div>
                      <h5 className="font-semibold text-gray-700 mb-2">Domain</h5>
                      <Badge className="bg-purple-100 text-purple-800">{selectedPrinciple.domain}</Badge>
                    </div>
                  )}
                  {selectedPrinciple.previous_version && (
                    <div>
                      <h5 className="font-semibold text-gray-700 mb-2">Previous Version</h5>
                      <Badge variant="outline">v{selectedPrinciple.previous_version}</Badge>
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>

            {/* Cross-domain Applications */}
            {selectedPrinciple.cross_domain_applications && (
              <Card className="border-0 shadow-md">
                <CardHeader>
                  <h4 className="text-lg font-semibold flex items-center gap-2 text-gray-800">
                    <span className="text-xl">🌐</span>
                    Cross-Domain Applications
                  </h4>
                </CardHeader>
                <CardContent>
                  <div className="space-y-2">
                    {Object.entries(selectedPrinciple.cross_domain_applications).map(([domain, application]) => (
                      <div key={domain} className="flex items-start gap-3">
                        <Badge variant="outline" className="mt-0.5">{domain.replace(/_/g, ' ')}</Badge>
                        <span className="text-gray-700">{application as string}</span>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Examples */}
            {selectedPrinciple.examples && (
              <Card className="border-0 shadow-md">
                <CardHeader>
                  <h4 className="text-lg font-semibold flex items-center gap-2 text-gray-800">
                    <span className="text-xl">📚</span>
                    Examples
                  </h4>
                </CardHeader>
                <CardContent>
                  {Object.entries(selectedPrinciple.examples).map(([type, examples]) => (
                    <div key={type} className="mb-4">
                      <h5 className="font-semibold text-gray-700 mb-2 capitalize">{type} Examples</h5>
                      <div className="space-y-2">
                        {Array.isArray(examples) && examples.map((example, idx) => (
                          <div key={idx} className="flex items-start gap-2">
                            <span className={type === 'good' ? '✅' : '❌'}></span>
                            <span className="text-gray-700">{example}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>
            )}
          </TabsContent>

          {/* Requirements Tab */}
          <TabsContent value="requirements" className="space-y-6 mt-0">
            {selectedPrinciple.requirements ? (
              Object.entries(selectedPrinciple.requirements).map(([key, value]: [string, any]) => (
                <Card key={key} className="border-0 shadow-md">
                  <CardHeader className="bg-gradient-to-r from-blue-50 to-indigo-50">
                    <h4 className="font-semibold text-lg text-blue-900 capitalize">
                      {key.replace(/_/g, ' ')}
                    </h4>
                  </CardHeader>
                  <CardContent className="p-6">
                    <div className="text-gray-700 leading-relaxed">
                      {typeof value === 'object' ? (
                        <div className="space-y-3">
                          {value.description && (
                            <p className="mb-3">{value.description}</p>
                          )}
                          {value.mandatory !== undefined && (
                            <Badge className={value.mandatory ? 'bg-red-100 text-red-800' : 'bg-gray-100'}>
                              {value.mandatory ? 'Mandatory' : 'Optional'}
                            </Badge>
                          )}
                          {value.implementation && (
                            <div>
                              <span className="font-medium">Implementation: </span>
                              <code className="bg-gray-100 px-2 py-1 rounded text-sm">{value.implementation}</code>
                            </div>
                          )}
                        </div>
                      ) : (
                        <p>{value}</p>
                      )}
                    </div>
                  </CardContent>
                </Card>
              ))
            ) : (
              <Card className="border-0 shadow-md">
                <CardContent className="p-8 text-center text-gray-500">
                  <div className="text-4xl mb-2">📋</div>
                  <p>No requirements defined for this principle</p>
                </CardContent>
              </Card>
            )}

            {/* Five Freedoms (for animal welfare) */}
            {selectedPrinciple.freedoms && (
              <Card className="border-0 shadow-md">
                <CardHeader className="bg-gradient-to-r from-green-50 to-emerald-50">
                  <h4 className="text-lg font-semibold flex items-center gap-2 text-gray-800">
                    <span className="text-xl">🐾</span>
                    Five Freedoms
                  </h4>
                </CardHeader>
                <CardContent className="p-6 space-y-4">
                  {Object.entries(selectedPrinciple.freedoms).map(([key, value]: [string, any]) => (
                    <div key={key} className="p-4 bg-white rounded-lg border border-green-200">
                      <h5 className="font-semibold text-green-900 mb-2">{value.description}</h5>
                      {value.requirements && (
                        <ul className="text-gray-700 ml-4 space-y-1">
                          {value.requirements.map((req: string, idx: number) => (
                            <li key={idx} className="list-disc">{req}</li>
                          ))}
                        </ul>
                      )}
                    </div>
                  ))}
                </CardContent>
              </Card>
            )}
          </TabsContent>

          {/* Validation Tab */}
          <TabsContent value="validation" className="space-y-6 mt-0">
            {selectedPrinciple.validation_rules ? (
              Object.entries(selectedPrinciple.validation_rules).map(([key, value]: [string, any]) => (
                <Card key={key} className="border-0 shadow-md">
                  <CardHeader className="bg-gradient-to-r from-purple-50 to-pink-50">
                    <h4 className="font-semibold text-lg text-purple-900 capitalize">
                      {key.replace(/_/g, ' ')}
                    </h4>
                  </CardHeader>
                  <CardContent className="p-6">
                    {Array.isArray(value) ? (
                      <ul className="space-y-2">
                        {value.map((item: string, idx: number) => (
                          <li key={idx} className="flex items-start gap-2">
                            <span className="text-purple-600 mt-0.5">✓</span>
                            <span className="text-gray-700">{item}</span>
                          </li>
                        ))}
                      </ul>
                    ) : (
                      <p className="text-gray-700">{value}</p>
                    )}
                  </CardContent>
                </Card>
              ))
            ) : (
              <Card className="border-0 shadow-md">
                <CardContent className="p-8 text-center text-gray-500">
                  <div className="text-4xl mb-2">🔍</div>
                  <p>No validation rules defined for this principle</p>
                </CardContent>
              </Card>
            )}
          </TabsContent>

          {/* Discussions Tab */}
          <TabsContent value="discussions" className="mt-0">
            {discussions.length > 0 ? (
              <div className="space-y-3">
                {discussions.map((discussion, idx) => (
                  <Card 
                    key={idx} 
                    className="border-0 shadow-md hover:shadow-lg transition-all cursor-pointer"
                    onClick={() => onSelectDiscussion(discussion)}
                  >
                    <CardContent className="p-4">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <h5 className="font-semibold text-gray-900 mb-2">{discussion.title}</h5>
                          <div className="flex gap-2 flex-wrap">
                            <Badge className="text-xs bg-orange-100 text-orange-800">
                              {discussion.status}
                            </Badge>
                            <Badge variant="outline" className="text-xs">
                              {discussion.author}
                            </Badge>
                            <Badge variant="outline" className="text-xs">
                              {discussion.created}
                            </Badge>
                          </div>
                          {discussion.summary && (
                            <p className="text-sm text-gray-600 mt-2 line-clamp-2">
                              {discussion.summary}
                            </p>
                          )}
                        </div>
                        <Button variant="ghost" size="sm" className="ml-4">
                          View →
                        </Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            ) : (
              <Card className="border-0 shadow-md">
                <CardContent className="p-8 text-center text-gray-500">
                  <div className="text-4xl mb-2">💬</div>
                  <p>No discussions yet for this principle</p>
                </CardContent>
              </Card>
            )}
          </TabsContent>
        </ScrollArea>
      </Tabs>
    </div>
  );
}
```

## File: components/governance/DiscussionViewer.tsx

- Extension: .tsx
- Language: typescript
- Size: 12363 bytes
- Created: 2025-06-09 19:24:13
- Modified: 2025-06-09 19:24:13

### Code

```typescript
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Separator } from '@/components/ui/separator';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Avatar } from '@/components/ui/avatar';
import { GovernanceDiscussion } from '@/types/governance';

interface DiscussionViewerProps {
  discussion: GovernanceDiscussion;
  onBack: () => void;
}

interface DiscussionComment {
  author: string;
  role: 'human' | 'ai-agent';
  date: string;
  content: string;
}

export function DiscussionViewer({ discussion, onBack }: DiscussionViewerProps) {
  // Parse the discussion content to extract structured comments
  const parseDiscussionContent = (content: string): {
    metadata: Record<string, string>;
    summary: string;
    proposedChanges?: string;
    rationale?: string;
    comments: DiscussionComment[];
    votes?: { human: string[]; ai: string[] };
  } => {
    const lines = content.split('\n');
    const metadata: Record<string, string> = {};
    let summary = '';
    let proposedChanges = '';
    let rationale = '';
    const comments: DiscussionComment[] = [];
    const votes = { human: [], ai: [] };

    let currentSection = '';
    let currentComment: Partial<DiscussionComment> | null = null;
    let inCodeBlock = false;

    for (let i = 0; i < lines.length; i++) {
      const line = lines[i];

      // Check for code blocks
      if (line.trim().startsWith('```')) {
        inCodeBlock = !inCodeBlock;
      }

      // Parse metadata
      if (line.startsWith('**') && line.includes(':**')) {
        const [key, value] = line.split(':**');
        metadata[key.replace('**', '').trim()] = value.trim();
        continue;
      }

      // Parse sections
      if (line.startsWith('## ')) {
        currentSection = line.substring(3).toLowerCase();
        continue;
      }

      // Capture summary
      if (currentSection === 'summary' && line.trim() && !line.startsWith('#')) {
        summary += line + ' ';
      }

      // Capture proposed changes
      if (currentSection === 'proposed changes' && !inCodeBlock) {
        proposedChanges = '';
        // Capture the code block after this section
        for (let j = i + 1; j < lines.length && !lines[j].startsWith('##'); j++) {
          proposedChanges += lines[j] + '\n';
        }
      }

      // Capture rationale
      if (currentSection === 'rationale' && line.trim() && !line.startsWith('#')) {
        rationale += line + ' ';
      }

      // Parse discussion comments
      if (currentSection === 'discussion') {
        // Check for author line (bold text with role in parentheses)
        const authorMatch = line.match(/\*\*@(.+?)\s*\((Human|AI Agent)\)\*\*/);
        if (authorMatch) {
          if (currentComment && currentComment.author) {
            comments.push(currentComment as DiscussionComment);
          }
          currentComment = {
            author: '@' + authorMatch[1],
            role: authorMatch[2].toLowerCase().replace(' ', '-') as 'human' | 'ai-agent',
            date: '',
            content: ''
          };
        }
        // Check for date line (italic text with "ago")
        else if (line.match(/\*(.+?ago)\*/)) {
          if (currentComment) {
            currentComment.date = line.replace(/\*/g, '').trim();
          }
        }
        // Collect comment content
        else if (currentComment && line.trim() && !line.startsWith('#')) {
          currentComment.content += line + '\n';
        }
      }

      // Parse votes
      if (currentSection === 'votes' || line.includes('Current Status:')) {
        if (line.includes('✅') || line.includes('🤔')) {
          const voteMatch = line.match(/([✅🤔])\s*@(.+?):\s*"(.+?)"/);
          if (voteMatch) {
            const vote = `${voteMatch[1]} @${voteMatch[2]}: "${voteMatch[3]}"`;
            if (line.includes('Agent')) {
              votes.ai.push(vote);
            } else {
              votes.human.push(vote);
            }
          }
        }
      }
    }

    // Add the last comment
    if (currentComment && currentComment.author) {
      comments.push(currentComment as DiscussionComment);
    }

    return {
      metadata,
      summary: summary.trim(),
      proposedChanges: proposedChanges.trim(),
      rationale: rationale.trim(),
      comments,
      votes: votes.human.length > 0 || votes.ai.length > 0 ? votes : undefined
    };
  };

  const parsedContent = parseDiscussionContent(discussion.content);

  const getStatusColor = (status: string) => {
    const statusLower = status.toLowerCase();
    if (statusLower.includes('voting')) return 'bg-yellow-100 text-yellow-800 border-yellow-300';
    if (statusLower.includes('active')) return 'bg-green-100 text-green-800 border-green-300';
    if (statusLower.includes('draft')) return 'bg-gray-100 text-gray-800 border-gray-300';
    if (statusLower.includes('review')) return 'bg-blue-100 text-blue-800 border-blue-300';
    return 'bg-gray-100 text-gray-800 border-gray-300';
  };

  return (
    <ScrollArea className="h-[calc(100vh-200px)]">
      <div className="space-y-6">
        {/* Header */}
        <Card className="border-0 shadow-lg">
          <CardHeader className="bg-gradient-to-r from-gray-50 to-blue-50 border-b">
            <div className="flex items-start justify-between gap-4">
              <div className="flex-1">
                <h2 className="text-2xl font-bold text-gray-900 mb-3">{discussion.title}</h2>
                <div className="flex flex-wrap gap-3 items-center">
                  <Badge className={`${getStatusColor(discussion.status)} font-medium px-3 py-1`}>
                    {discussion.status}
                  </Badge>
                  {parsedContent.metadata['Proposal'] && (
                    <Badge variant="outline" className="bg-purple-50 border-purple-200 text-purple-800">
                      {parsedContent.metadata['Proposal']}
                    </Badge>
                  )}
                  <Separator orientation="vertical" className="h-5" />
                  <div className="flex items-center gap-2 text-sm text-gray-600">
                    <Avatar className="h-6 w-6 bg-gray-200">
                      <span className="text-xs">{discussion.author.charAt(1)}</span>
                    </Avatar>
                    <span className="font-medium">{discussion.author}</span>
                    <span>opened on {discussion.created}</span>
                  </div>
                </div>
              </div>
              <Button
                variant="outline"
                onClick={onBack}
                className="hover:bg-blue-50"
              >
                ← Back to Principle
              </Button>
            </div>
          </CardHeader>

          <CardContent className="p-6">
            {/* Summary Section */}
            {parsedContent.summary && (
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800">Summary</h3>
                <p className="text-gray-700 leading-relaxed">{parsedContent.summary}</p>
              </div>
            )}

            {/* Proposed Changes */}
            {parsedContent.proposedChanges && (
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800">Proposed Changes</h3>
                <div className="bg-gray-50 rounded-lg p-4 border border-gray-200">
                  <ReactMarkdown
                    remarkPlugins={[remarkGfm]}
                    className="prose prose-sm max-w-none"
                  >
                    {parsedContent.proposedChanges}
                  </ReactMarkdown>
                </div>
              </div>
            )}

            {/* Rationale */}
            {parsedContent.rationale && (
              <div className="mb-6">
                <h3 className="text-lg font-semibold mb-2 text-gray-800">Rationale</h3>
                <p className="text-gray-700 leading-relaxed">{parsedContent.rationale}</p>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Discussion Thread */}
        {parsedContent.comments.length > 0 && (
          <Card className="border-0 shadow-lg">
            <CardHeader className="bg-gradient-to-r from-orange-50 to-yellow-50 border-b">
              <h3 className="text-xl font-bold text-gray-900 flex items-center gap-2">
                <span className="text-2xl">💬</span>
                Discussion ({parsedContent.comments.length} comments)
              </h3>
            </CardHeader>
            <CardContent className="p-0">
              <div className="divide-y divide-gray-200">
                {parsedContent.comments.map((comment, idx) => (
                  <div key={idx} className="p-6 hover:bg-gray-50 transition-colors">
                    <div className="flex items-start gap-4">
                      <Avatar className={`h-10 w-10 ${
                        comment.role === 'ai-agent'
                          ? 'bg-gradient-to-br from-blue-400 to-purple-400'
                          : 'bg-gradient-to-br from-green-400 to-teal-400'
                      }`}>
                        <span className="text-white font-medium">
                          {comment.role === 'ai-agent' ? '🤖' : comment.author.charAt(1)}
                        </span>
                      </Avatar>
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-2">
                          <span className="font-semibold text-gray-900">{comment.author}</span>
                          <Badge
                            variant="outline"
                            className={`text-xs ${
                              comment.role === 'ai-agent'
                                ? 'bg-purple-50 text-purple-700 border-purple-200'
                                : 'bg-green-50 text-green-700 border-green-200'
                            }`}
                          >
                            {comment.role === 'ai-agent' ? 'AI Agent' : 'Human'}
                          </Badge>
                          <span className="text-sm text-gray-500">{comment.date}</span>
                        </div>
                        <div className="prose prose-sm max-w-none text-gray-700">
                          <ReactMarkdown remarkPlugins={[remarkGfm]}>
                            {comment.content}
                          </ReactMarkdown>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        )}

        {/* Voting Status */}
        {parsedContent.votes && (
          <Card className="border-0 shadow-lg">
            <CardHeader className="bg-gradient-to-r from-purple-50 to-pink-50 border-b">
              <h3 className="text-xl font-bold text-gray-900 flex items-center gap-2">
                <span className="text-2xl">🗳️</span>
                Voting Status
              </h3>
            </CardHeader>
            <CardContent className="p-6">
              <div className="grid md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-gray-800 mb-3">Human Votes ({parsedContent.votes.human.length})</h4>
                  <div className="space-y-2">
                    {parsedContent.votes.human.map((vote, idx) => (
                      <div key={idx} className="text-sm text-gray-700">{vote}</div>
                    ))}
                  </div>
                </div>
                <div>
                  <h4 className="font-semibold text-gray-800 mb-3">AI Agent Recommendations ({parsedContent.votes.ai.length})</h4>
                  <div className="space-y-2">
                    {parsedContent.votes.ai.map((vote, idx) => (
                      <div key={idx} className="text-sm text-gray-700">{vote}</div>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </ScrollArea>
  );
}

```

